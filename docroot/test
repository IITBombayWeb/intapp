README.txt:65:libraries. Bare installation profiles require you to download Drupal Core and
themes/bootstrap/docs/Sub-Theming.md:39:4. Rename `./THEMENAME/THEMENAME.libraries.yml`
themes/bootstrap/docs/Maintainers.md:67:libraries for local development purposes in the `./lib` directory. This process
themes/bootstrap/docs/Maintainers.md:70:Once you have the various versions of libraries have been installed, this task
themes/bootstrap/docs/Maintainers.md:73:week as the `.libraries` file in the root of this project. In the event that a
themes/bootstrap/docs/plugins/Setting.md:128:loads external resources using libraries by altering the libraries it defines
themes/bootstrap/grunt/sync.js:5:  grunt.registerTask('sync', 'Syncs necessary libraries for development purposes. Read more in: MAINTAINERS.md.', function () {
themes/bootstrap/grunt/sync.js:12:    var libraries = {};
themes/bootstrap/grunt/sync.js:13:    var librariesCache = path.join(cwd, pkg.caches.libraries);
themes/bootstrap/grunt/sync.js:14:    var librariesPath = path.join(cwd, pkg.paths.libraries);
themes/bootstrap/grunt/sync.js:15:    var exists = grunt.file.exists(librariesCache);
themes/bootstrap/grunt/sync.js:18:    // Determine the validity of any existing cached libraries file.
themes/bootstrap/grunt/sync.js:22:      var stat = fs.statSync(librariesCache);
themes/bootstrap/grunt/sync.js:49:          grunt.verbose.write("\nExtracting versions and themes from libraries...");
themes/bootstrap/grunt/sync.js:50:          libraries = {};
themes/bootstrap/grunt/sync.js:55:                  if (!libraries[library.name]) libraries[library.name] = {};
themes/bootstrap/grunt/sync.js:56:                  if (!libraries[library.name][asset.version]) libraries[library.name][asset.version] = {};
themes/bootstrap/grunt/sync.js:60:                      libraries[library.name][asset.version]['bootstrap'] = true;
themes/bootstrap/grunt/sync.js:63:                      libraries[library.name][asset.version][file.split(path.sep)[0]] = true;
themes/bootstrap/grunt/sync.js:73:          for (var library in libraries) {
themes/bootstrap/grunt/sync.js:75:            if (!libraries.hasOwnProperty(library)) continue;
themes/bootstrap/grunt/sync.js:76:            var versions = Object.keys(libraries[library]);
themes/bootstrap/grunt/sync.js:79:            for (var version in libraries[library]) {
themes/bootstrap/grunt/sync.js:80:              if (!libraries[library].hasOwnProperty(version)) continue;
themes/bootstrap/grunt/sync.js:81:              var themes = Object.keys(libraries[library][version]).sort();
themes/bootstrap/grunt/sync.js:82:              libraries[library][version] = themes;
themes/bootstrap/grunt/sync.js:90:          grunt.file.write(librariesCache, JSON.stringify(libraries, null, 2));
themes/bootstrap/grunt/sync.js:110:      if (!exists) grunt.verbose.writeln('No libraries cache detected, syncing libraries.');
themes/bootstrap/grunt/sync.js:111:      else if (force) grunt.verbose.writeln('Forced option detected, syncing libraries.');
themes/bootstrap/grunt/sync.js:112:      else if (expired) grunt.verbose.writeln('Libraries cache is over a week old, syncing libraries.');
themes/bootstrap/grunt/sync.js:117:    grunt.registerTask('sync:libraries', function () {
themes/bootstrap/grunt/sync.js:122:      if (!grunt.file.exists(librariesCache)) {
themes/bootstrap/grunt/sync.js:123:        return grunt.fail.fatal('No libraries detected. Please run `grunt sync --force`.');
themes/bootstrap/grunt/sync.js:125:      libraries = grunt.file.readJSON(librariesCache);
themes/bootstrap/grunt/sync.js:127:      if (!grunt.file.isDir(librariesPath)) grunt.file.mkdir(librariesPath);
themes/bootstrap/grunt/sync.js:129:      // Iterate over libraries.
themes/bootstrap/grunt/sync.js:130:      for (var library in libraries) {
themes/bootstrap/grunt/sync.js:131:        if (!libraries.hasOwnProperty(library)) continue;
themes/bootstrap/grunt/sync.js:134:        for (var version in libraries[library]) {
themes/bootstrap/grunt/sync.js:135:          if (!libraries[library].hasOwnProperty(version)) continue;
themes/bootstrap/grunt/sync.js:140:          var versionPath = path.join(librariesPath, version);
themes/bootstrap/grunt/sync.js:193:    grunt.task.run(['sync:libraries']);
themes/bootstrap/grunt/compile.js:7:  var path, cssPath, libraries, librariesCache, librariesPath, versions, latestVersion;
themes/bootstrap/grunt/compile.js:12:    if (!grunt.file.exists(path.join(librariesPath, file))) {
themes/bootstrap/grunt/compile.js:31:    librariesCache = path.join(cwd, pkg.caches.libraries);
themes/bootstrap/grunt/compile.js:32:    librariesPath = path.join(cwd, pkg.paths.libraries);
themes/bootstrap/grunt/compile.js:33:    if (!grunt.file.exists(librariesCache) || !grunt.file.isDir(librariesPath)) {
themes/bootstrap/grunt/compile.js:34:      return grunt.fail.fatal('No libraries detected. Please run `grunt sync`.');
themes/bootstrap/grunt/compile.js:37:    libraries = grunt.file.readJSON(librariesCache);
themes/bootstrap/grunt/compile.js:38:    if (!libraries.bootstrap || !libraries.bootswatch) {
themes/bootstrap/grunt/compile.js:39:      return grunt.fail.fatal('Invalid libraries cache. Please run `grunt sync`.');
themes/bootstrap/grunt/compile.js:42:    versions = Object.keys(libraries.bootstrap);
themes/bootstrap/grunt/compile.js:75:      // Iterate over libraries.
themes/bootstrap/grunt/compile.js:76:      for (var library in libraries) {
themes/bootstrap/grunt/compile.js:77:        if (!libraries.hasOwnProperty(library) || (dev && library !== 'bootstrap')) continue;
themes/bootstrap/grunt/compile.js:79:        for (var version in libraries[library]) {
themes/bootstrap/grunt/compile.js:80:          if (!libraries[library].hasOwnProperty(version) || (dev && version !== latestVersion)) continue;
themes/bootstrap/grunt/compile.js:82:          for (var i = 0; i < libraries[library][version].length; i++) {
themes/bootstrap/grunt/compile.js:86:                var lessPaths = [path.join(librariesPath)];
themes/bootstrap/grunt/compile.js:135:            })(library, Object.keys(libraries[library]), version, libraries[library][version][i], total);
themes/bootstrap/.gitignore:12:.libraries
themes/bootstrap/bootstrap.libraries.yml:85:# libraries-extend
themes/bootstrap/bootstrap.libraries.yml:124:# libraries-override
themes/bootstrap/package.json:27:    "libraries": ".libraries"
themes/bootstrap/package.json:32:    "libraries": "lib"
themes/bootstrap/package.json:35:    "jsdelivr": "https://api.jsdelivr.com/v1/bootstrap/libraries"
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:21:  public function alter(&$libraries, &$extension = NULL, &$context2 = NULL) {
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:26:      $this->processLibrary($libraries, function (&$info, &$key, $type) {
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:36:        $libraries['livereload']['js'][$livereload] = $libraries['livereload']['js']['livereload.js'];
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:37:        unset($libraries['livereload']['js']['livereload.js']);
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:50:      $libraries['framework'] = NestedArray::mergeDeepArray([$assets, $libraries['framework']], TRUE);
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:55:      $libraries['framework']['version'] = $version;
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:71:          $libraries['framework']['css']['base'][$overrides] = [];
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:84:          $key = array_search('core/jquery.ui.dialog', $libraries['drupal.dialog']['dependencies']);
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:86:            unset($libraries['drupal.dialog']['dependencies'][$key]);
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:90:          unset($libraries['drupal.dialog']['js']['misc/dialog/dialog.jquery-ui.js']);
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:93:          $libraries['drupal.dialog']['dependencies'][] = 'bootstrap/modal.jquery.ui.bridge';
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:97:          $libraries['drupal.dialog']['dependencies'][] = 'bootstrap/modal';
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:106:   * @param array $libraries
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:107:   *   The libraries array, passed by reference.
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:111:  public function processLibrary(array &$libraries, callable $callback) {
themes/bootstrap/src/Plugin/Alter/LibraryInfo.php:112:    foreach ($libraries as &$library) {
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:16: *   api = "https://api.jsdelivr.com/v1/bootstrap/libraries",
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:112:    $libraries = [];
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:118:              $libraries[$data['name']][$asset['version']] = $asset['files'];
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:126:    if (!isset($libraries[$bootstrap])) {
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:144:    foreach (array_keys($libraries[$bootstrap]) as $version) {
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:152:      $definition['themes'][$version] = NestedArray::mergeDeep($definition['themes'][$version], $this->extractThemes($libraries[$bootstrap][$version], "//cdn.jsdelivr.net/bootstrap/$version"));
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:155:      if (isset($libraries[$bootswatch][$version])) {
themes/bootstrap/src/Plugin/Provider/JsDelivr.php:156:        $definition['themes'][$version] = NestedArray::mergeDeep($definition['themes'][$version], $this->extractThemes($libraries[$bootswatch][$version], "//cdn.jsdelivr.net/bootswatch/$version"));
themes/bootstrap/starterkits/sass/scss/_overrides.scss:2:// specific Drupal libraries are used.
themes/bootstrap/starterkits/sass/THEMENAME.starterkit.yml:22:libraries-extend:
themes/bootstrap/starterkits/cdn/THEMENAME.starterkit.yml:22:libraries:
themes/bootstrap/starterkits/less/THEMENAME.starterkit.yml:22:libraries-extend:
themes/bootstrap/starterkits/less/less/overrides.less:2:// specific Drupal libraries are used.
themes/bootstrap/bootstrap.info.yml:22:libraries:
themes/bootstrap/bootstrap.info.yml:25:libraries-extend:
themes/bootstrap/bootstrap.info.yml:45:libraries-override:
themes/capit/capit.info.yml:27:libraries:
themes/capit/bootstrap/docs/_includes/nav/javascript.html:11:    <li><a href="#callout-third-party-libs">Third-party libraries</a></li>
themes/capit/bootstrap/docs/_includes/js/overview.html:83:    <h4>Third-party libraries</h4>
themes/capit/bootstrap/docs/_includes/js/overview.html:84:    <p><strong>Bootstrap does not officially support third-party JavaScript libraries</strong> like Prototype or jQuery UI. Despite <code>.noConflict</code> and namespaced events, there may be compatibility problems that you need to fix on your own.</p>
themes/capit/sass/_overrides.scss:11:// specific Drupal libraries are used.
Binary file themes/capit/.sass-cache/1a23ff7a8f45a3ad84aa6c1df7972d28a6736793/overrides.scssc matches
Binary file themes/capit/.sass-cache/1a23ff7a8f45a3ad84aa6c1df7972d28a6736793/_overrides.scssc matches
Binary file themes/capit/.sass-cache/eafcaa229259658a006a031fe8922991e1280113/_overrides.scssc matches
Binary file themes/capit/.sass-cache/975eb1a097be115b08e43fd221e946263d8bdb98/_overrides.scssc matches
themes/business/business.info.yml:6:libraries:
composer.lock:2126:            "description": "Common interface for caching libraries",
composer.lock:2271:            "description": "Common interface for logging libraries",
.eslintignore:4:libraries/**/*
.eslintignore:5:sites/**/libraries/**/*
.eslintignore:6:profiles/**/libraries/**/*
modules/custom/excel_import_export/excel_import_export.batch.inc:322:  $library = libraries_load('PHPExcel');
modules/libraries/slick/README.markdown:17:- https://cdnjs.com/libraries/slick-carousel
modules/libraries/PHPExcel/Examples/36chartreadwriteHTML.php:50:$rendererLibraryPath = '/php/libraries/Charts/' . $rendererLibrary;
modules/libraries/PHPExcel/Examples/36chartreadwritePDF.php:54:$rendererLibraryPath = '/php/libraries/PDF/' . $rendererLibrary;
modules/libraries/PHPExcel/Examples/36chartreadwritePDF.php:73:$rendererLibraryPath = '/php/libraries/Charts/' . $rendererLibrary;
modules/libraries/PHPExcel/Examples/35chartrender.php:50:$rendererLibraryPath = '/php/libraries/Charts/' . $rendererLibrary;
modules/libraries/PHPExcel/Examples/01simple-download-pdf.php:49:$rendererLibraryPath = dirname(__FILE__).'/../../../libraries/PDF/' . $rendererLibrary;
modules/libraries/PHPExcel/Examples/21pdf.php:52:$rendererLibraryPath = '/php/libraries/PDF/' . $rendererLibrary;
modules/libraries/PHPExcel/Examples/26utf8.php:49:$rendererLibraryPath = '/php/libraries/PDF/' . $rendererLibrary;
modules/libraries/PHPExcel/license.md:215:restrictions of other proprietary libraries that do not normally
modules/libraries/PHPExcel/Classes/PHPExcel/Settings.php:44:    /**    Optional Chart Rendering libraries */
modules/libraries/PHPExcel/Classes/PHPExcel/Settings.php:47:    /**    Optional PDF Rendering libraries */
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/CodePage.php:144:                return 'UTF-16LE';  //    UTF-16 (BIFF8) This isn't correct, but some Excel writer libraries erroneously use Codepage 21010 for UTF-16LE
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:21:specially designated software packages--typically libraries--of the
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:66:  Most GNU software, including some libraries, is covered by the
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:68:General Public License, applies to certain designated libraries, and
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:70:this license for certain libraries in order to permit linking those
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:71:libraries into non-free programs.
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:86:libraries.  However, the Lesser license provides advantages in certain
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:93:library does the same job as widely used non-free libraries.  In this
modules/libraries/PHPExcel/Classes/PHPExcel/Shared/PCLZip/gnu-lgpl.txt:328:restrictions of other proprietary libraries that do not normally
Binary file modules/libraries/PHPExcel/Documentation/PHPExcel developer documentation.doc matches
modules/libraries/PHPExcel/Documentation/markdown/Overview/10-Reading-and-Writing.md:620:PHPExcel’s PDF Writer is a wrapper for a 3rd-Party PDF Rendering library such as tcPDF, mPDF or DomPDF. Prior to version 1.7.8 of PHPExcel, the tcPDF library was bundled with PHPExcel; but from version 1.7.8 this was removed. Instead, you must now install a PDF Rendering library yourself; but PHPExcel will work with a number of different libraries.
modules/libraries/PHPExcel/Documentation/markdown/Overview/10-Reading-and-Writing.md:622:Currently, the following libraries are supported:
modules/libraries/PHPExcel/Documentation/markdown/Overview/10-Reading-and-Writing.md:630:The different libraries have different strengths and weaknesses. Some generate better formatted output than others, some are faster or use less memory than others, while some generate smaller .pdf files. It is the developers choice which one they wish to use, appropriate to their own circumstances.
modules/libraries/PHPExcel/Documentation/markdown/Overview/10-Reading-and-Writing.md:637:$rendererLibraryPath = dirname(__FILE__).'/../../../libraries/PDF/' . $rendererLibrary;
modules/libraries/PHPExcel/Documentation/markdown/Overview/01-Getting-Started.md:117:Not all features of PHPExcel are implemented in all of the Reader / Writer classes. This is mostly due to underlying libraries not supporting a specific feature or not having implemented a specific feature.
modules/libraries/PHPExcel/changelog.txt:62:- General:  (MBaker)          Work Item GH-396  - Some Excel writer libraries erroneously use Codepage 21010 for UTF-16LE
modules/contrib/slick/README.txt:37:    /libraries/slick/slick/slick.css
modules/contrib/slick/README.txt:38:    /libraries/slick/slick/slick-theme.css (optional if a skin chosen)
modules/contrib/slick/README.txt:39:    /libraries/slick/slick/slick.min.js
modules/contrib/slick/README.txt:43:  /libraries/easing/jquery.easing.min.js
modules/contrib/slick/README.txt:122:  /libraries/mousewheel/jquery.mousewheel.min.js
modules/contrib/slick/README.txt:217:If you want to attach extra 3rd libraries, e.g.: image reflection, image zoomer,
modules/contrib/slick/CHANGELOG.txt:39:  allow addition of options with other libraries integrated with Slick without
modules/contrib/slick/CHANGELOG.txt:44:- Fixed for Slick libraries weight regression at hook_library_info_alter().
modules/contrib/slick/CHANGELOG.txt:175:- #2793477 by daniel.bosen: Hook requirements returns error when libraries
modules/contrib/slick/CHANGELOG.txt:201:- #2768457 by chr.fritsch: Add libraries support.
modules/contrib/slick/CHANGELOG.txt:391:- Converted hook_library_info() into slick.libraries.yml
modules/contrib/slick/CHANGELOG.txt:394:- Removed dependencies on CTools, libraries and jquery_update modules.
modules/contrib/slick/slick.libraries.yml:1:# All libraries supported by Slick module.
modules/contrib/slick/slick.libraries.yml:10:    /libraries/mousewheel/jquery.mousewheel.min.js: { weight: -4, minified: true }
modules/contrib/slick/slick.libraries.yml:22:    /libraries/easing/jquery.easing.min.js: { weight: -4, minified: true }
modules/contrib/slick/slick.libraries.yml:34:    /libraries/slick/slick/slick.min.js: { weight: -3, minified: true }
modules/contrib/slick/slick.libraries.yml:37:      /libraries/slick/slick/slick.css: {}
modules/contrib/slick/slick.api.php:411: *       // libraries. These must be registered as module libraries first.
modules/contrib/slick/slick.api.php:412: *       // Use above CSS and JS directly if reluctant to register libraries.
modules/contrib/slick/slick.install:16:  if (function_exists('libraries_get_path')) {
modules/contrib/slick/slick.install:17:    $path = libraries_get_path('slick') . '/slick/slick.min.js';
modules/contrib/slick/slick.install:20:    $path = DRUPAL_ROOT . '/libraries/slick/slick/slick.min.js';
modules/contrib/slick/slick.install:28:      'description' => $exists ? '' : t('The <a href=":url">Slick library</a> should be installed at <strong>/libraries/slick/slick/slick.min.js</strong>, or any path supported by libraries.module if installed.', [':url' => 'https://github.com/kenwheeler/slick/']),
modules/contrib/slick/src/SlickManager.php:91:    $libraries['slick.css'] = [
modules/contrib/slick/src/SlickManager.php:94:        'theme' => ['/libraries/slick/slick/slick-theme.css' => []],
modules/contrib/slick/src/SlickManager.php:106:              $libraries[$id][$property] = $skin[$property];
modules/contrib/slick/src/SlickManager.php:113:    return $libraries;
modules/contrib/slick/src/SlickManager.php:130:    if (is_file('libraries/easing/jquery.easing.min.js')) {
modules/contrib/slick/src/SlickManager.php:367:    // addition of options with other libraries integrated with Slick without
modules/contrib/slick/src/SlickManager.php:398:    // Attach libraries.
modules/contrib/slick/slick.module:70:function slick_library_info_alter(&$libraries, $extension) {
modules/contrib/slick/slick.module:71:  if ($extension === 'slick' && function_exists('libraries_get_path')) {
modules/contrib/slick/slick.module:72:    $library_path = libraries_get_path('slick') ? libraries_get_path('slick') : libraries_get_path('slick-carousel');
modules/contrib/slick/slick.module:74:      $libraries['slick']['js'] = ['/' . $library_path . '/slick/slick.min.js' => ['weight' => -3]];
modules/contrib/slick/slick.module:75:      $libraries['slick']['css']['base'] = ['/' . $library_path . '/slick/slick.css' => []];
modules/contrib/slick/slick.module:76:      $libraries['slick.css']['css']['theme'] = ['/' . $library_path . '/slick/slick-theme.css' => []];
modules/contrib/slick/slick_ui/src/Form/SlickForm.php:460:        'description' => $this->t('Be sure to download the <a href="@mousewheel" target="_blank">mousewheel</a> library, and it is available at <em>/libraries/mousewheel/jquery.mousewheel.min.js</em>.', ['@mousewheel' => '//github.com/brandonaaron/jquery-mousewheel']),
modules/contrib/slick/slick_ui/src/Form/SlickForm.php:585:        'description'  => $this->t('Add easing for jQuery animate as fallback. Use with <a href="@easing">easing</a> libraries or default easing methods. Optionally install <a href="@jqeasing">jqeasing module</a>. This will be ignored and replaced by CSS ease for supporting browsers, or effective if useCSS is disabled.', ['@jqeasing' => '//drupal.org/project/jqeasing', '@easing' => '//gsgd.co.uk/sandbox/jquery/easing/']),
modules/contrib/slick/slick_ui/README.html:22:        <em>/libraries/slick/slick/slick.css</em><br />
modules/contrib/slick/slick_ui/README.html:23:        <em>/libraries/slick/slick/slick-theme.css</em> (optional if a skin chosen)<br />
modules/contrib/slick/slick_ui/README.html:24:        <em>/libraries/slick/slick/slick.min.js</em>
modules/contrib/slick/slick_ui/README.html:29:    <em>/libraries/easing/jquery.easing.min.js</em><br />
modules/contrib/slick/slick_ui/README.html:89:  <em>/libraries/mousewheel/jquery.mousewheel.min.js</em></li>
modules/contrib/slick/slick_ui/README.html:181:<p>If you want to attach extra 3rd libraries, e.g.: image reflection, image zoomer,<br />
modules/contrib/slick/tests/src/Kernel/SlickManagerTest.php:113:    // Verify libraries.
modules/contrib/slick/tests/src/Kernel/SlickManagerTest.php:114:    $libraries = $manager->libraryInfoBuild();
modules/contrib/slick/tests/src/Kernel/SlickManagerTest.php:115:    $this->assertArrayHasKey('slick.main.default', $libraries);
modules/contrib/phpexcel/phpexcel.module:43: * Implements hook_libraries_info().
modules/contrib/phpexcel/phpexcel.module:45:function phpexcel_libraries_info() {
modules/contrib/phpexcel/phpexcel.inc:66:  $library = libraries_load('PHPExcel');
modules/contrib/phpexcel/phpexcel.inc:349:    $library = libraries_load('PHPExcel');
modules/contrib/phpexcel/README.txt:7:This module depends on the Libraries API module (http://drupal.org/project/libraries).
modules/contrib/phpexcel/README.txt:19:The PHPExcel library can be extracted in any libraries folder you want (sites/*/libraries). You should have sites/*/libraries/PHPExcel/Classes/PHPExcel.php.
modules/contrib/phpexcel/README.txt:27:Also, *the include path for the PHPExcel library changes*! Make sure to move your library files (see Installation above). This may seem odd, but the previous way to store the library was not "right", in that you could not simply extract the downloaded archive to your libraries folder. Now you can.
modules/contrib/phpexcel/src/Tests/ExporterTest.php:27:    parent::setUp('libraries', 'phpexcel');
modules/contrib/phpexcel/src/Exporter.php:161:    $library = libraries_load('PHPExcel');
modules/contrib/phpexcel/tests/phpexcel.test:27:    parent::setUp('libraries', 'phpexcel');
modules/contrib/libraries/libraries.module:10:use Drupal\libraries\ExternalLibrary\Asset\AttachableAssetLibraryRegistrationInterface;
modules/contrib/libraries/libraries.module:11:use Drupal\libraries\ExternalLibrary\Utility\LibraryAccessorInterface;
modules/contrib/libraries/libraries.module:12:use Drupal\libraries\ExternalLibrary\Utility\LibraryIdAccessorInterface;
modules/contrib/libraries/libraries.module:18: * Register external asset libraries with Drupal core's library APIs.
modules/contrib/libraries/libraries.module:20:function libraries_library_info_build() {
modules/contrib/libraries/libraries.module:21:  /** @var \Drupal\libraries\ExternalLibrary\LibraryManagerInterface $library_manager */
modules/contrib/libraries/libraries.module:22:  $library_manager = \Drupal::service('libraries.manager');
modules/contrib/libraries/libraries.module:23:  $attachable_libraries = [];
modules/contrib/libraries/libraries.module:24:  $libraries_with_errors = [];
modules/contrib/libraries/libraries.module:30:        $attachable_libraries += $library_type->getAttachableAssetLibraries($external_library, $library_manager);
modules/contrib/libraries/libraries.module:37:        $libraries_with_errors[] = $external_library_id;
modules/contrib/libraries/libraries.module:38:        watchdog_exception('libraries', $e);
modules/contrib/libraries/libraries.module:48:  if ($libraries_with_errors) {
modules/contrib/libraries/libraries.module:49:    \Drupal::logger('libraries')->error('The following external libraries could not successfully be registered with Drupal core: @libs. See earlier log entries for more details. Once these issues are addressed please be sure to clear your Drupal library cache to ensure external library detection is run again.', ['@libs' => implode(',', $libraries_with_errors)]);
modules/contrib/libraries/libraries.module:51:  return $attachable_libraries;
modules/contrib/libraries/libraries.module:65: * @ingroup libraries
modules/contrib/libraries/libraries.module:71:function libraries_get_path($name, $base_path = FALSE) {
modules/contrib/libraries/libraries.module:72:  $libraries = &drupal_static(__FUNCTION__);
modules/contrib/libraries/libraries.module:74:  if (!isset($libraries)) {
modules/contrib/libraries/libraries.module:75:    $libraries = libraries_get_libraries();
modules/contrib/libraries/libraries.module:79:  if (!isset($libraries[$name])) {
modules/contrib/libraries/libraries.module:83:    $path .= $libraries[$name];
modules/contrib/libraries/libraries.module:93: * (i.e. sites/all/libraries/), the profiles directory, and site-specific
modules/contrib/libraries/libraries.module:94: * directory (i.e. sites/somesite/libraries/). The returned array will be keyed
modules/contrib/libraries/libraries.module:95: * by the library name. Site-specific libraries are prioritized over libraries
modules/contrib/libraries/libraries.module:103: * @ingroup libraries
modules/contrib/libraries/libraries.module:109:function libraries_get_libraries() {
modules/contrib/libraries/libraries.module:113:  // @todo core/libraries
modules/contrib/libraries/libraries.module:116:  // profile, installation profiles may want to place libraries into a
modules/contrib/libraries/libraries.module:117:  // 'libraries' directory.
modules/contrib/libraries/libraries.module:120:    $searchdir[] = "$profile_path/libraries";
modules/contrib/libraries/libraries.module:123:  // Search sites/all/libraries for backwards-compatibility.
modules/contrib/libraries/libraries.module:124:  $searchdir[] = 'sites/all/libraries';
modules/contrib/libraries/libraries.module:126:  // Always search the root 'libraries' directory.
modules/contrib/libraries/libraries.module:127:  $searchdir[] = 'libraries';
modules/contrib/libraries/libraries.module:130:  $searchdir[] = "$config/libraries";
modules/contrib/libraries/libraries.module:155: * - libraries
modules/contrib/libraries/libraries.module:156: * - profiles/$profilename/libraries
modules/contrib/libraries/libraries.module:157: * - sites/all/libraries
modules/contrib/libraries/libraries.module:158: * - sites/$sitename/libraries
modules/contrib/libraries/libraries.module:159: * - any directories specified via hook_libraries_info_file_paths()
modules/contrib/libraries/libraries.module:169:function libraries_scan_info_files() {
modules/contrib/libraries/libraries.module:174:  $directories = \Drupal::moduleHandler()->invokeAll('libraries_info_file_paths', $args = array());
modules/contrib/libraries/libraries.module:175:  $directories[] = "$profile/libraries";
modules/contrib/libraries/libraries.module:176:  $directories[] = 'sites/all/libraries';
modules/contrib/libraries/libraries.module:177:  $directories[] = 'libraries';
modules/contrib/libraries/libraries.module:178:  $directories[] = "$config/libraries";
modules/contrib/libraries/libraries.module:184:      $files = array_merge($files, file_scan_directory($dir, '@^[a-z0-9._-]+\.libraries\.info\.yml$@', array(
modules/contrib/libraries/libraries.module:192:    $files[basename($filename, '.libraries.info')] = $file;
modules/contrib/libraries/libraries.module:212:function libraries_invoke($group, &$library) {
modules/contrib/libraries/libraries.module:214:    libraries_traverse_library($library, $callback);
modules/contrib/libraries/libraries.module:235:function libraries_traverse_library(&$library, $callback) {
modules/contrib/libraries/libraries.module:263: * This turns libraries' file information declared as e.g.
modules/contrib/libraries/libraries.module:286: * @see libraries_info()
modules/contrib/libraries/libraries.module:287: * @see libraries_invoke()
modules/contrib/libraries/libraries.module:293:function libraries_prepare_files(&$library, $version = NULL, $variant = NULL) {
modules/contrib/libraries/libraries.module:338: * @see libraries_info()
modules/contrib/libraries/libraries.module:339: * @see libraries_invoke()
modules/contrib/libraries/libraries.module:345:function libraries_detect_dependencies(&$library, $version = NULL, $variant = NULL) {
modules/contrib/libraries/libraries.module:349:      $dependency = libraries_detect($dependency_info['name']);
modules/contrib/libraries/libraries.module:368:      // Remove the version string from the dependency, so libraries_load() can
modules/contrib/libraries/libraries.module:369:      // load the libraries directly.
modules/contrib/libraries/libraries.module:376: * Returns information about registered libraries.
modules/contrib/libraries/libraries.module:382: *   for. If omitted, information about all registered libraries is returned.
modules/contrib/libraries/libraries.module:385: *   An associative array containing registered information for all libraries,
modules/contrib/libraries/libraries.module:389: * @see hook_libraries_info()
modules/contrib/libraries/libraries.module:398:function &libraries_info($name = NULL) {
modules/contrib/libraries/libraries.module:399:  // This static cache is re-used by libraries_detect() to save memory.
modules/contrib/libraries/libraries.module:400:  $libraries = &drupal_static(__FUNCTION__);
modules/contrib/libraries/libraries.module:402:  if (!isset($libraries)) {
modules/contrib/libraries/libraries.module:403:    $libraries = array();
modules/contrib/libraries/libraries.module:404:    // Gather information from hook_libraries_info().
modules/contrib/libraries/libraries.module:406:    foreach ($module_handler->getImplementations('libraries_info') as $module) {
modules/contrib/libraries/libraries.module:407:      foreach ($module_handler->invoke($module, 'libraries_info') as $machine_name => $properties) {
modules/contrib/libraries/libraries.module:409:        $libraries[$machine_name] = $properties;
modules/contrib/libraries/libraries.module:412:    // Gather information from hook_libraries_info() in enabled themes.
modules/contrib/libraries/libraries.module:422:        $function = $theme_key . '_' . 'libraries_info';
modules/contrib/libraries/libraries.module:426:            $libraries[$machine_name] = $properties;
modules/contrib/libraries/libraries.module:435:    // system from finding library info files we use the 'libraries.info.yml'
modules/contrib/libraries/libraries.module:444:    foreach (libraries_scan_info_files() as $machine_name => $file) {
modules/contrib/libraries/libraries.module:447:      $libraries[$machine_name] = $properties;
modules/contrib/libraries/libraries.module:451:    foreach ($libraries as $machine_name => &$properties) {
modules/contrib/libraries/libraries.module:452:      libraries_info_defaults($properties, $machine_name);
modules/contrib/libraries/libraries.module:455:    // Allow modules to alter the registered libraries.
modules/contrib/libraries/libraries.module:456:    $module_handler->alter('libraries_info', $libraries);
modules/contrib/libraries/libraries.module:459:    foreach ($libraries as &$properties) {
modules/contrib/libraries/libraries.module:460:      libraries_invoke('info', $properties);
modules/contrib/libraries/libraries.module:465:    if (!empty($libraries[$name])) {
modules/contrib/libraries/libraries.module:466:      return $libraries[$name];
modules/contrib/libraries/libraries.module:473:  return $libraries;
modules/contrib/libraries/libraries.module:488:function libraries_info_defaults(&$library, $name) {
modules/contrib/libraries/libraries.module:496:    'version callback' => 'libraries_get_version',
modules/contrib/libraries/libraries.module:514:  array_unshift($library['callbacks']['info'], 'libraries_prepare_files');
modules/contrib/libraries/libraries.module:515:  array_unshift($library['callbacks']['post-detect'], 'libraries_detect_dependencies');
modules/contrib/libraries/libraries.module:529: *   In addition to the keys returned by libraries_info(), the following keys
modules/contrib/libraries/libraries.module:540: * @see libraries_info()
modules/contrib/libraries/libraries.module:546:function libraries_detect($name) {
modules/contrib/libraries/libraries.module:547:  // Re-use the statically cached value of libraries_info() to save memory.
modules/contrib/libraries/libraries.module:548:  $library = &libraries_info($name);
modules/contrib/libraries/libraries.module:562:    $library['library path'] = libraries_get_path($library['machine name']);
modules/contrib/libraries/libraries.module:573:  libraries_invoke('pre-detect', $library);
modules/contrib/libraries/libraries.module:651:  libraries_invoke('post-detect', $library);
modules/contrib/libraries/libraries.module:668: *   libraries_info(). The top-level properties contain the effective definition
modules/contrib/libraries/libraries.module:671: *     libraries_detect_library().
modules/contrib/libraries/libraries.module:674: *   See hook_libraries_info() for more information.
modules/contrib/libraries/libraries.module:680:function libraries_load($name, $variant = NULL) {
modules/contrib/libraries/libraries.module:684:    $library = \Drupal::cache('libraries')->get($name);
modules/contrib/libraries/libraries.module:689:      $library = libraries_detect($name);
modules/contrib/libraries/libraries.module:690:      \Drupal::cache('libraries')->set($name, $library);
modules/contrib/libraries/libraries.module:711:          libraries_load($dependency);
modules/contrib/libraries/libraries.module:716:      libraries_invoke('pre-load', $library);
modules/contrib/libraries/libraries.module:719:      $library['loaded'] = libraries_load_files($library);
modules/contrib/libraries/libraries.module:722:      libraries_invoke('post-load', $library);
modules/contrib/libraries/libraries.module:734: *   An array of library information as returned by libraries_info().
modules/contrib/libraries/libraries.module:743:function libraries_load_files($library) {
modules/contrib/libraries/libraries.module:806:      libraries_load_files(array(
modules/contrib/libraries/libraries.module:840: * @see libraries_get_path()
modules/contrib/libraries/libraries.module:846:function libraries_get_version($library, $options) {
modules/contrib/libraries/README.txt:9:- [Project page](https://www.drupal.org/project/libraries)
modules/contrib/libraries/README.txt:10:- [Issue tracker](https://www.drupal.org/project/issues/libraries)
modules/contrib/libraries/README.txt:11:- [Repository viewer](http://cgit.drupalcode.org/libraries)
modules/contrib/libraries/README.txt:17:for further information. Note that installing external libraries is separate from
modules/contrib/libraries/README.txt:18:installing this module and should happen in the top-level `libraries` directory.
modules/contrib/libraries/libraries.api.php:9: * @defgroup libraries External libraries
modules/contrib/libraries/libraries.api.php:11: * External libraries are not shipped as part of contributed modules for
modules/contrib/libraries/libraries.api.php:13: * problem of integrating with and loading external libraries as part of the
modules/contrib/libraries/libraries.api.php:18: * libraries and metadata about each of the libraries. Because multiple modules
modules/contrib/libraries/libraries.api.php:32: * unique among all libraries known to Libraries API.
modules/contrib/libraries/libraries.api.php:65: * Many libraries depend on other libraries to function. Thus, most library
modules/contrib/libraries/libraries.api.php:66: * classes should implement DependentLibraryInterface to allow libraries to
modules/contrib/libraries/libraries.api.php:68: * in the dependencies libraries need to be able to declare dependencies on
modules/contrib/libraries/libraries.api.php:69: * specific versions or version ranges of other libraries. This has yet to be
modules/contrib/libraries/libraries.api.php:72: * Furthermore, Libraries API must also maintain a list of libraries that are
modules/contrib/libraries/libraries.api.php:75: * dependencies can be prevented until the libraries are properly installed.
modules/contrib/libraries/libraries.api.php:77: * automatically retrieve library definitions of required libraries, and
modules/contrib/libraries/libraries.api.php:78: * possibly to automatically download the libraries themselves.
modules/contrib/libraries/libraries.api.php:92: * @subsection sub_types_asset Asset libraries
modules/contrib/libraries/libraries.api.php:94: * of PHP libraries, asset libraries are the primary use-case for Libraries API.
modules/contrib/libraries/libraries.api.php:95: * Because asset libraries cannot be loaded ad-hoc, but must be attached to a
modules/contrib/libraries/libraries.api.php:96: * renderable element, Libraries API registers external asset libraries that are
modules/contrib/libraries/libraries.api.php:104: * avoid Libraries API altogether for PHP libraries. See PhpFileLibraryInterface
modules/contrib/libraries/libraries.api.php:109: * @see \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface
modules/contrib/libraries/libraries.api.php:110: * @see \Drupal\libraries\ExternalLibrary\Definition\StreamDefinitionDiscovery
modules/contrib/libraries/libraries.api.php:111: * @see \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/libraries.api.php:112: * @see \Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface
modules/contrib/libraries/libraries.api.php:113: * @see \Drupal\libraries\Plugin\libraries\VersionDetector\LinePatternDetector
modules/contrib/libraries/libraries.api.php:114: * @see \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface
modules/contrib/libraries/libraries.api.php:115: * @see \Drupal\libraries\ExternalLibrary\Dependency\DependentLibraryInterface
modules/contrib/libraries/libraries.api.php:116: * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface
modules/contrib/libraries/libraries.api.php:117: * @see \Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLibraryInterface
modules/contrib/libraries/libraries.api.php:132:function hook_libraries_library_type_info_alter(array &$library_types) {
modules/contrib/libraries/libraries.api.php:134:  // distinct from the class actually for asset libraries themselves.
modules/contrib/libraries/libraries.api.php:148:function hook_libraries_locator_info_alter(array &$locators) {
modules/contrib/libraries/libraries.api.php:163:function hook_libraries_version_detector_info_alter(array &$version_detectors) {
modules/contrib/libraries/libraries.api.php:169: * Return information about external libraries.
modules/contrib/libraries/libraries.api.php:172: *   An associative array whose keys are internal names of libraries and whose
modules/contrib/libraries/libraries.api.php:174: *   the 'libraries' directory, in which the library may be found. Each value is
modules/contrib/libraries/libraries.api.php:189: *     callback' below) to allow for version changes of libraries without code
modules/contrib/libraries/libraries.api.php:200: *     values (see 'version arguments'). Defaults to libraries_get_version().
modules/contrib/libraries/libraries.api.php:209: *     default version callback libraries_get_version() expects a single,
modules/contrib/libraries/libraries.api.php:229: *   - dependencies: An array of libraries this library depends on. Similar to
modules/contrib/libraries/libraries.api.php:233: *     $libraries['dependencies'] = array(
modules/contrib/libraries/libraries.api.php:278: *     Naturally, libraries evolve over time and so do their APIs. In case a
modules/contrib/libraries/libraries.api.php:298: *       library with a certain part of the libraries array passed as $library
modules/contrib/libraries/libraries.api.php:308: *       information has been retrieved via hook_libraries_info() or info files.
modules/contrib/libraries/libraries.api.php:338:function hook_libraries_info() {
modules/contrib/libraries/libraries.api.php:342:  // This array key lets Libraries API search for 'sites/all/libraries/example'
modules/contrib/libraries/libraries.api.php:344:  $libraries['example'] = array(
modules/contrib/libraries/libraries.api.php:350:    // 'sites/all/libraries/example/lib', specify the relative path here.
modules/contrib/libraries/libraries.api.php:355:    // libraries_get_version() takes a named argument array:
modules/contrib/libraries/libraries.api.php:376:      // For PHP libraries, specify include files here, still relative to the
modules/contrib/libraries/libraries.api.php:450:        'mymodule_example_libraries_info_callback',
modules/contrib/libraries/libraries.api.php:454:        'mymodule_example_libraries_predetect_callback',
modules/contrib/libraries/libraries.api.php:458:        'mymodule_example_libraries_postdetect_callback',
modules/contrib/libraries/libraries.api.php:462:        'mymodule_example_libraries_preload_callback',
modules/contrib/libraries/libraries.api.php:466:        'mymodule_example_libraries_postload_callback',
modules/contrib/libraries/libraries.api.php:472:  // Expected to be extracted into 'sites/all/libraries/simple'.
modules/contrib/libraries/libraries.api.php:473:  $libraries['simple'] = array(
modules/contrib/libraries/libraries.api.php:490:  $libraries['tinymce'] = array(
modules/contrib/libraries/libraries.api.php:496:    // version), which libraries_get_version() doesn't allow.
modules/contrib/libraries/libraries.api.php:564:  return $libraries;
modules/contrib/libraries/libraries.api.php:575: * @see hook_libraries_info()
modules/contrib/libraries/libraries.api.php:579:function hook_libraries_info_alter(&$libraries) {
modules/contrib/libraries/libraries.api.php:583:  $libraries['php_spellchecker']['integration files']['example_module'] = $files;
modules/contrib/libraries/libraries.api.php:591: * - libraries
modules/contrib/libraries/libraries.api.php:592: * - profiles/$profile/libraries
modules/contrib/libraries/libraries.api.php:593: * - sites/all/libraries
modules/contrib/libraries/libraries.api.php:594: * - sites/$site/libraries
modules/contrib/libraries/libraries.api.php:596: * files. This should only be used for modules that declare many libraries.
modules/contrib/libraries/libraries.api.php:597: * Modules that only implement a few libraries should implement
modules/contrib/libraries/libraries.api.php:598: * hook_libraries_info().
modules/contrib/libraries/libraries.api.php:605:function hook_libraries_info_file_paths() {
modules/contrib/libraries/libraries.api.php:608:  return array(drupal_get_path('module', 'libraries_test') . '/example');
modules/contrib/libraries/libraries.services.yml:2:  libraries.manager:
modules/contrib/libraries/libraries.services.yml:3:    class: Drupal\libraries\ExternalLibrary\LibraryManager
modules/contrib/libraries/libraries.services.yml:5:      - '@libraries.definition.discovery'
modules/contrib/libraries/libraries.services.yml:6:      - '@plugin.manager.libraries.library_type'
modules/contrib/libraries/libraries.services.yml:10:  # https://www.drupal.org/project/libraries_registry, and stores them locally
modules/contrib/libraries/libraries.services.yml:14:  libraries.definition.discovery:
modules/contrib/libraries/libraries.services.yml:15:    class: Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface
modules/contrib/libraries/libraries.services.yml:16:    factory: 'libraries.definition.discovery.factory:get'
modules/contrib/libraries/libraries.services.yml:17:  libraries.definition.discovery.factory:
modules/contrib/libraries/libraries.services.yml:18:    class: Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryFactory
modules/contrib/libraries/libraries.services.yml:27:  # libraries.definition.discovery:
modules/contrib/libraries/libraries.services.yml:28:  #   class: Drupal\libraries\ExternalLibrary\Definition\FileDefinitionDiscovery
modules/contrib/libraries/libraries.services.yml:34:  plugin.manager.libraries.library_type:
modules/contrib/libraries/libraries.services.yml:35:    class: Drupal\libraries\ExternalLibrary\Type\LibraryTypeFactory
modules/contrib/libraries/libraries.services.yml:37:  plugin.manager.libraries.locator:
modules/contrib/libraries/libraries.services.yml:38:    class: Drupal\libraries\ExternalLibrary\Local\LocatorManager
modules/contrib/libraries/libraries.services.yml:40:  plugin.manager.libraries.version_detector:
modules/contrib/libraries/libraries.services.yml:41:    class: Drupal\libraries\ExternalLibrary\Version\VersionDetectorManager
modules/contrib/libraries/libraries.services.yml:44:  libraries.config_subscriber:
modules/contrib/libraries/libraries.services.yml:45:    class: Drupal\libraries\Config\LibrariesConfigSubscriber
modules/contrib/libraries/libraries.services.yml:50:  libraries.php_file_loader:
modules/contrib/libraries/libraries.services.yml:51:    class: Drupal\libraries\ExternalLibrary\PhpFile\PhpRequireLoader
modules/contrib/libraries/libraries.services.yml:54:    class: Drupal\libraries\StreamWrapper\LibraryDefinitionsStream
modules/contrib/libraries/libraries.services.yml:58:  stream_wrapper.asset_libraries:
modules/contrib/libraries/libraries.services.yml:59:    class: Drupal\libraries\StreamWrapper\AssetLibrariesStream
modules/contrib/libraries/libraries.services.yml:62:  stream_wrapper.php_file_libraries:
modules/contrib/libraries/libraries.services.yml:63:    class: Drupal\libraries\StreamWrapper\PhpFileLibrariesStream
modules/contrib/libraries/libraries.services.yml:68:  cache.libraries:
modules/contrib/libraries/libraries.info.yml:3:description: Allows version-dependent and shared usage of external libraries.
modules/contrib/libraries/libraries.info.yml:9:project: 'libraries'
modules/contrib/libraries/CHANGELOG.txt:7:#2770983 by rjacobs: Update services.yml to reference new registry URL of http://cgit.drupalcode.org/libraries_registry/plain/registry/8
modules/contrib/libraries/CHANGELOG.txt:8:#2770983 by rjacobs: Update shipped config to reference new registry URL of http://cgit.drupalcode.org/libraries_registry/plain/registry/8
modules/contrib/libraries/CHANGELOG.txt:12:#2770983 by tstoeckler: Allow libraries to be symlinked to their right place.
modules/contrib/libraries/CHANGELOG.txt:18:by tstoeckler: Implement version detection for libraries
modules/contrib/libraries/CHANGELOG.txt:21:#2090623 by tstoeckler: Provide support for remote asset libraries
modules/contrib/libraries/CHANGELOG.txt:22:#2090623 by tstoeckler: Introduce a stream wrapper for asset libraries
modules/contrib/libraries/CHANGELOG.txt:31:by tstoeckler: Fix drush libraries-list and drush cache-clear libraries.
modules/contrib/libraries/CHANGELOG.txt:45:#2090323 by tstoeckler: Remove obsolete libraries_parse_dependency().
modules/contrib/libraries/CHANGELOG.txt:49:#1167496 by tstoeckler: Remove leftover libraries.test file.
modules/contrib/libraries/CHANGELOG.txt:60:#2352251 by netw3rker: Fix incorrect hook name in libraries.api.php.
modules/contrib/libraries/CHANGELOG.txt:61:#2352237 by netw3rker, tstoeckler: Allow clearing the libraries cache from Drush.
modules/contrib/libraries/CHANGELOG.txt:69:#1953260 by tstoeckler: Improve documentation of libraries_get_version().
modules/contrib/libraries/CHANGELOG.txt:74:#1876124 by tstoeckler | whastings, fubhy: Fix hook_libraries_info() for themes.
modules/contrib/libraries/CHANGELOG.txt:77:#1844272 by tstoeckler, jweowu: Fix typos in libraries.api.php.
modules/contrib/libraries/CHANGELOG.txt:79:#1329388 by RobLoach, tstoeckler: Clear static caches in libraries_flush_caches().
modules/contrib/libraries/CHANGELOG.txt:81:#1938638 by Pol: Fix typo in libraries.api.php.
modules/contrib/libraries/CHANGELOG.txt:88:#1565426 by tstoeckler: Invoke hook_libraries_info() in enabled themes.
modules/contrib/libraries/CHANGELOG.txt:95:#1449346 by tstoeckler, sun: Clean-up libraries.test
modules/contrib/libraries/CHANGELOG.txt:101:#1323530 by tstoeckler: Document libraries_get_version() pattern matching.
modules/contrib/libraries/CHANGELOG.txt:102:#1325524 by sun, Rob Loach, tstoeckler: Statically cache libraries_detect().
modules/contrib/libraries/CHANGELOG.txt:108:#1268342 by tstoeckler: Clean up drush libraries-list command.
modules/contrib/libraries/CHANGELOG.txt:113:#958162 by sun, tstoeckler: Make tests debuggable and provide libraries_info_defaults().
modules/contrib/libraries/CHANGELOG.txt:114:#961476 by tstoeckler: Changed libraries_get_path() to return FALSE by default.
modules/contrib/libraries/CHANGELOG.txt:115:#958162 by tstoeckler, sun, good_man: Allow to apply callbacks to libraries.
modules/contrib/libraries/CHANGELOG.txt:116:#1125904 by tstoeckler, boombatower: Fix drush libraries-list.
modules/contrib/libraries/CHANGELOG.txt:117:#1050076 by tstoeckler: Re-utilize libraries_detect() and remove libraries_detect_library().
modules/contrib/libraries/CHANGELOG.txt:121:#1064008 by tstoeckler, bfroehle: Fix outdated API examples in libraries.api.php.
modules/contrib/libraries/CHANGELOG.txt:123:#1023322 by tstoeckler, sun: Fixed libraries shouldn't be loaded multiple times.
modules/contrib/libraries/CHANGELOG.txt:128:#924130 by aaronbauman: Fixed libraries_get_path() should use drupal_static().
modules/contrib/libraries/CHANGELOG.txt:133:#939174 by sun, tstoeckler: Rename example.info to libraries_example.info.
modules/contrib/libraries/CHANGELOG.txt:135:#542940 by tstoeckler, sun: Add libraries-list command.
modules/contrib/libraries/CHANGELOG.txt:140:#855050 by Gábor Hojtsy: Avoid call-time pass by reference in libraries_detect().
modules/contrib/libraries/CHANGELOG.txt:141:#719896 by tstoeckler, sun: Added starting point for hook_libraries_info().
modules/contrib/libraries/CHANGELOG.txt:158:#496732 by tstoeckler, robphillips: Allow placing libraries in root directory.
modules/contrib/libraries/composer.json:2:  "name": "drupal/libraries",
modules/contrib/libraries/composer.json:3:  "description": "Allows version-dependent and shared usage of external libraries in Drupal.",
modules/contrib/libraries/composer.json:5:  "homepage": "http://drupal.org/project/libraries",
modules/contrib/libraries/composer.json:9:    "issues": "http://drupal.org/project/issues/libraries",
modules/contrib/libraries/composer.json:11:    "source": "http://cgit.drupalcode.org/libraries"
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:3:namespace Drupal\libraries\ExternalLibrary;
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:16:   * @return \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:19:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:20:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryTypeNotFoundException
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:26:   * Gets the list of libraries that are required by enabled extensions.
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:39:   * Note that not all library types support explicit loading. Asset libraries,
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:46:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException
modules/contrib/libraries/src/ExternalLibrary/LibraryManagerInterface.php:47:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryNotInstalledException
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Asset;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:5:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:6:use Drupal\libraries\ExternalLibrary\LibraryManagerInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:9: * Provides an interface for external asset libraries with multiple libraries.
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:12: * libraries in general.
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:18: * 'libraries/[machine_name].[component_name]' where '[machine_name]' is the
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:27: *     'libraries/bootstrap.button',
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:28: *     'libraries/bootstrap.form',
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:32: * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:42:   * The period is chosen in alignment with core asset libraries, which are
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:50:   * @param \Drupal\libraries\ExternalLibrary\LibraryManagerInterface $library_manager
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:55:   * @see \Drupal\libraries\ExternalLibrary\Asset\SingleAssetLibraryTrait
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibraryInterface.php:57:   * @throws \Drupal\libraries\ExternalLibrary\Exception\InvalidLibraryDependencyException
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Asset;
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:6: * A trait for asset libraries that serve local and remote files.
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:14: * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:15: * @see \Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:25:   * @see \Drupal\libraries\ExternalLibrary\Asset\SingleAssetLibraryTrait::canBeAttached()
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:28:    /** @var \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface|\Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryInterface $this */
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:35:   * For local libraries this is the library path, for remote libraries this is
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:42:    /** @var \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface|\Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryInterface $this */
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:72:   * @see \Drupal\libraries\ExternalLibrary\Asset\SingleAssetLibraryTrait::getCssAssets()
modules/contrib/libraries/src/ExternalLibrary/Asset/LocalRemoteAssetTrait.php:96:   * @see \Drupal\libraries\ExternalLibrary\Asset\SingleAssetLibraryTrait::getJsAssets()
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:3:namespace Drupal\libraries\ExternalLibrary\Asset;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:6:use Drupal\libraries\ExternalLibrary\Dependency\DependentLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:7:use Drupal\libraries\ExternalLibrary\Exception\LibraryNotInstalledException;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:8:use Drupal\libraries\ExternalLibrary\LibraryBase;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:9:use Drupal\libraries\ExternalLibrary\LibraryManagerInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:10:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:11:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryTrait;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:12:use Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:13:use Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryTrait;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:14:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:15:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:18: * Provides a class for a library with multiple attachable asset libraries.
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:35:   * An array of attachable asset libraries.
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:37:  protected $libraries = [];
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:46:   * @param \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface $library_type
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:52:    $this->libraries = $definition['libraries'];
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:62:      'libraries' => [],
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:64:    foreach ($definition['libraries'] as &$library) {
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:76:   * @param \Drupal\libraries\ExternalLibrary\LibraryManagerInterface $library_manager
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:81:   * @see \Drupal\libraries\ExternalLibrary\Asset\getAttachableAssetLibraries::getAttachableAssetLibraries()
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:83:   * @throws \Drupal\libraries\ExternalLibrary\Exception\InvalidLibraryDependencyException
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:84:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:85:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryTypeNotFoundException
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:94:    $attachable_libraries = [];
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:95:    foreach ($this->libraries as $attachable_library_id => $attachable_library) {
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:96:      $attachable_libraries[$attachable_library_id] = [
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:103:    return $attachable_libraries;
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:111:   * @return \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/ExternalLibrary/Asset/MultipleAssetLibrary.php:113:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::getLocator()
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:3:namespace Drupal\libraries\ExternalLibrary\Asset;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:6:use Drupal\libraries\ExternalLibrary\Exception\LibraryNotInstalledException;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:7:use Drupal\libraries\ExternalLibrary\LibraryBase;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:8:use Drupal\libraries\ExternalLibrary\LibraryManagerInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:9:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:10:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryTrait;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:11:use Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:12:use Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryTrait;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:13:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:58:   * @param \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface $library_type
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:85:   * @param \Drupal\libraries\ExternalLibrary\LibraryManagerInterface $library_manager
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:90:   * @see \Drupal\libraries\ExternalLibrary\Asset\getAttachableAssetLibraries::getAttachableAssetLibraries()
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:92:   * @throws \Drupal\libraries\ExternalLibrary\Exception\InvalidLibraryDependencyException
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:93:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:94:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryTypeNotFoundException
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:116:   * @return \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibrary.php:118:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::getLocator()
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Asset;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:5:use Drupal\libraries\ExternalLibrary\Dependency\DependentLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:6:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:7:use Drupal\libraries\ExternalLibrary\LibraryManagerInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:8:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:11: * Provides an interface for external asset libraries with a single library.
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:15: * In order to load assets of external libraries as part of a page request the
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:17: * Libraries API makes all libraries that are required by the installed
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:18: * installation profile, modules, and themes available as core asset libraries
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:19: * with the identifier 'libraries/[machine_name]' where '[machine_name]' is
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:26: *   $build['#attached']['library'] = ['libraries/flexslider'];
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:33: * @see libraries_library_info_build()
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:34: * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryTrait
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:35: * @see \Drupal\libraries\ExternalLibrary\Asset\MultipleAssetLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:40: * @ingroup libraries
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:51:   * @param \Drupal\libraries\ExternalLibrary\LibraryManagerInterface $library_manager
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:56:   * @see \Drupal\libraries\ExternalLibrary\Asset\SingleAssetLibraryTrait
modules/contrib/libraries/src/ExternalLibrary/Asset/AssetLibraryInterface.php:58:   * @throws \Drupal\libraries\ExternalLibrary\Exception\InvalidLibraryDependencyException
modules/contrib/libraries/src/ExternalLibrary/Asset/AttachableAssetLibraryRegistrationInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Asset;
modules/contrib/libraries/src/ExternalLibrary/Asset/AttachableAssetLibraryRegistrationInterface.php:5:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AttachableAssetLibraryRegistrationInterface.php:6:use Drupal\libraries\ExternalLibrary\LibraryManagerInterface;
modules/contrib/libraries/src/ExternalLibrary/Asset/AttachableAssetLibraryRegistrationInterface.php:16:   * @param \Drupal\libraries\ExternalLibrary\LibraryInterface $external_library
modules/contrib/libraries/src/ExternalLibrary/Asset/AttachableAssetLibraryRegistrationInterface.php:18:   * @param \Drupal\libraries\ExternalLibrary\LibraryManagerInterface $library_manager
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Remote;
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryInterface.php:5:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryInterface.php:8: * Provides an interface for remote libraries.
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryInterface.php:10: * Assuming they declare a remote URL, remote libraries are always loaded. It is
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryInterface.php:19:   * This check allows using the same library class for multiple libraries only
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryInterface.php:25:   * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Remote;
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryTrait.php:6: * Provides a trait for remote libraries.
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryTrait.php:20:   * This check allows using the same library class for multiple libraries only
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryTrait.php:26:   * @see \Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryInterface::hasRemoteUrl()
modules/contrib/libraries/src/ExternalLibrary/Remote/RemoteLibraryTrait.php:38:   * \Drupal\libraries\ExternalLibrary\Remote\RemoteLibraryInterface::getRemoteUrl()
modules/contrib/libraries/src/ExternalLibrary/Definition/GuzzleDefinitionDiscovery.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/GuzzleDefinitionDiscovery.php:6:use Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException;
modules/contrib/libraries/src/ExternalLibrary/Definition/ChainDefinitionDiscovery.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/ChainDefinitionDiscovery.php:5:use Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException;
modules/contrib/libraries/src/ExternalLibrary/Definition/ChainDefinitionDiscovery.php:15: * @see \Drupal\libraries\ExternalLibrary\Definition\WritableDefinitionDiscoveryInterface
modules/contrib/libraries/src/ExternalLibrary/Definition/ChainDefinitionDiscovery.php:22:   * @var \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface[]
modules/contrib/libraries/src/ExternalLibrary/Definition/ChainDefinitionDiscovery.php:43:    /** @var \Drupal\libraries\ExternalLibrary\Definition\WritableDefinitionDiscoveryInterface[] $discoveries_to_write */
modules/contrib/libraries/src/ExternalLibrary/Definition/ChainDefinitionDiscovery.php:69:   * @param \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface $discovery
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscovery.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscovery.php:6:use Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException;
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscovery.php:9: * Provides a libraries definition discovery using PHP's native file functions.
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscovery.php:16: * @see \Drupal\libraries\StreamWrapper\LibraryDefinitionsStream
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscovery.php:18: * @ingroup libraries
modules/contrib/libraries/src/ExternalLibrary/Definition/WritableDefinitionDiscoveryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/WritableDefinitionDiscoveryInterface.php:8: * @see \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface
modules/contrib/libraries/src/ExternalLibrary/Definition/WritableDefinitionDiscoveryInterface.php:9: * @see \Drupal\libraries\ExternalLibrary\Definition\ChainDefinitionDiscovery
modules/contrib/libraries/src/ExternalLibrary/Definition/WritableFileDefinitionDiscovery.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/WritableFileDefinitionDiscovery.php:8: * @see \Drupal\libraries\ExternalLibrary\Definition\FileDefinitionDiscovery
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscoveryBase.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscoveryBase.php:6:use Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException;
modules/contrib/libraries/src/ExternalLibrary/Definition/FileDefinitionDiscoveryBase.php:64:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException
modules/contrib/libraries/src/ExternalLibrary/Definition/DefinitionDiscoveryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/DefinitionDiscoveryInterface.php:14: * @ingroup libraries
modules/contrib/libraries/src/ExternalLibrary/Definition/DefinitionDiscoveryInterface.php:38:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException
modules/contrib/libraries/src/ExternalLibrary/Definition/DefinitionDiscoveryFactory.php:3:namespace Drupal\libraries\ExternalLibrary\Definition;
modules/contrib/libraries/src/ExternalLibrary/Definition/DefinitionDiscoveryFactory.php:69:   * @return \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface
modules/contrib/libraries/src/ExternalLibrary/Definition/DefinitionDiscoveryFactory.php:73:    $config = $this->configFactory->get('libraries.settings');
modules/contrib/libraries/src/ExternalLibrary/Exception/UnknownLibraryVersionException.php:3:namespace Drupal\libraries\ExternalLibrary\Exception;
modules/contrib/libraries/src/ExternalLibrary/Exception/UnknownLibraryVersionException.php:5:use Drupal\libraries\ExternalLibrary\Utility\LibraryAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/Exception/UnknownLibraryVersionException.php:6:use Drupal\libraries\ExternalLibrary\Utility\LibraryAccessorInterface;
modules/contrib/libraries/src/ExternalLibrary/Exception/UnknownLibraryVersionException.php:7:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Exception/UnknownLibraryVersionException.php:10: * Provides an exception for libraries whose version has not been detected.
modules/contrib/libraries/src/ExternalLibrary/Exception/UnknownLibraryVersionException.php:19:   * @param \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface $library
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryDefinitionNotFoundException.php:3:namespace Drupal\libraries\ExternalLibrary\Exception;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryDefinitionNotFoundException.php:5:use Drupal\libraries\ExternalLibrary\Utility\LibraryIdAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryDefinitionNotFoundException.php:6:use Drupal\libraries\ExternalLibrary\Utility\LibraryIdAccessorInterface;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryNotInstalledException.php:3:namespace Drupal\libraries\ExternalLibrary\Exception;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryNotInstalledException.php:5:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryNotInstalledException.php:6:use Drupal\libraries\ExternalLibrary\Utility\LibraryAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryNotInstalledException.php:7:use Drupal\libraries\ExternalLibrary\Utility\LibraryAccessorInterface;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryNotInstalledException.php:19:   * @param \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface $library
modules/contrib/libraries/src/ExternalLibrary/Exception/InvalidLibraryDependencyException.php:3:namespace Drupal\libraries\ExternalLibrary\Exception;
modules/contrib/libraries/src/ExternalLibrary/Exception/InvalidLibraryDependencyException.php:5:use Drupal\libraries\ExternalLibrary\Utility\DependencyAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/Exception/InvalidLibraryDependencyException.php:6:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Exception/InvalidLibraryDependencyException.php:7:use Drupal\libraries\ExternalLibrary\Utility\LibraryAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/Exception/InvalidLibraryDependencyException.php:8:use Drupal\libraries\ExternalLibrary\Utility\LibraryAccessorInterface;
modules/contrib/libraries/src/ExternalLibrary/Exception/InvalidLibraryDependencyException.php:21:   * @param \Drupal\libraries\ExternalLibrary\LibraryInterface $library
modules/contrib/libraries/src/ExternalLibrary/Exception/InvalidLibraryDependencyException.php:23:   * @param \Drupal\libraries\ExternalLibrary\LibraryInterface $dependency
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryTypeNotFoundException.php:3:namespace Drupal\libraries\ExternalLibrary\Exception;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryTypeNotFoundException.php:5:use Drupal\libraries\ExternalLibrary\Utility\LibraryIdAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/Exception/LibraryTypeNotFoundException.php:6:use Drupal\libraries\ExternalLibrary\Utility\LibraryIdAccessorInterface;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Version;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:6:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:9: * Provides an interface for versioned libraries.
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:12: * functionality so most libraries should implement this interface. In theory,
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:19: * @ingroup libraries
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:32:   * @throws \Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:34:   * @see \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface::setVersion()
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:46:   * @see \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface::getVersion()
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:59:   * @return \Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryInterface.php:61:   * @see \Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Version;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:6:use Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:9: * Provides a trait for versioned libraries.
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:11: * @see \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:42:   * @throws \Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:44:   * @see \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface::getVersion()
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:61:   * @see \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface::setVersion()
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:77:   * @return \Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface
modules/contrib/libraries/src/ExternalLibrary/Version/VersionedLibraryTrait.php:79:   * @see \Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Version;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorInterface.php:8: * @ingroup libraries
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorInterface.php:15:   * @param \Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface $library
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorInterface.php:18:   * @throws \Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorManager.php:3:namespace Drupal\libraries\ExternalLibrary\Version;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorManager.php:8:use Drupal\libraries\Annotation\VersionDetector;
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorManager.php:13: * @see \Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorManager.php:29:    parent::__construct('Plugin/libraries/VersionDetector', $namespaces, $module_handler, VersionDetectorInterface::class, VersionDetector::class);
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorManager.php:30:    $this->alterInfo('libraries_version_detector_info');
modules/contrib/libraries/src/ExternalLibrary/Version/VersionDetectorManager.php:31:    $this->setCacheBackend($cache_backend, 'libraries_version_detector_info');
modules/contrib/libraries/src/ExternalLibrary/LibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary;
modules/contrib/libraries/src/ExternalLibrary/LibraryInterface.php:5:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface;
modules/contrib/libraries/src/ExternalLibrary/LibraryInterface.php:8: * Provides an interface for different types of external libraries.
modules/contrib/libraries/src/ExternalLibrary/LibraryInterface.php:10: * @ingroup libraries
modules/contrib/libraries/src/ExternalLibrary/LibraryInterface.php:21:   * @param \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface $type
modules/contrib/libraries/src/ExternalLibrary/LibraryInterface.php:32:   *   The library ID. This must be unique among all known libraries.
modules/contrib/libraries/src/ExternalLibrary/LibraryInterface.php:39:   * @return \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Dependency;
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryTrait.php:6: * Provides a trait for libraries that depend on other libraries.
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryTrait.php:11:   * An array of library IDs of libraries that the library depends on.
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryTrait.php:18:   * Returns the libraries dependencies, if any.
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryTrait.php:21:   *   An array of library IDs of libraries that the library depends on.
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryTrait.php:23:   * @see \Drupal\libraries\ExternalLibrary\Dependency\DependentLibraryInterface::getDependencies()
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Dependency;
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryInterface.php:5:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryInterface.php:8: * Provides an interface for libraries that depend on other libraries.
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryInterface.php:15:   * Returns the libraries dependencies, if any.
modules/contrib/libraries/src/ExternalLibrary/Dependency/DependentLibraryInterface.php:18:   *   An array of library IDs of libraries that the library depends on.
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:3:namespace Drupal\libraries\ExternalLibrary;
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:6:use Drupal\libraries\ExternalLibrary\Exception\LibraryTypeNotFoundException;
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:7:use Drupal\libraries\ExternalLibrary\Type\LibraryCreationListenerInterface;
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:8:use Drupal\libraries\ExternalLibrary\Type\LibraryLoadingListenerInterface;
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:9:use Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface;
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:12: * Provides a manager for external libraries.
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:15: * @todo Automatically load PHP file libraries that are required by modules or
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:23:   * @var \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:37:   * @param \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface $definition_disovery
modules/contrib/libraries/src/ExternalLibrary/LibraryManager.php:110:   * @return \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryLoadingListenerInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Type;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryLoadingListenerInterface.php:5:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryLoadingListenerInterface.php:15:   * @param \Drupal\libraries\ExternalLibrary\LibraryInterface $library
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryCreationListenerInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Type;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryCreationListenerInterface.php:5:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryCreationListenerInterface.php:15:   * @param \Drupal\libraries\ExternalLibrary\LibraryInterface $library
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Type;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeInterface.php:19:   * Returns the class used for libraries of this type.
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeInterface.php:21:   * @return string|\Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeBase.php:3:namespace Drupal\libraries\ExternalLibrary\Type;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeBase.php:7:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeBase.php:8:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeBase.php:9:use Drupal\libraries\ExternalLibrary\Utility\IdAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeBase.php:10:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeBase.php:60:      $container->get('plugin.manager.libraries.locator'),
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeBase.php:61:      $container->get('plugin.manager.libraries.version_detector')
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeFactory.php:3:namespace Drupal\libraries\ExternalLibrary\Type;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeFactory.php:8:use Drupal\libraries\Annotation\LibraryType;
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeFactory.php:27:    parent::__construct('Plugin/libraries/Type', $namespaces, $module_handler, LibraryTypeInterface::class, LibraryType::class);
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeFactory.php:28:    $this->alterInfo('libraries_library_type_info');
modules/contrib/libraries/src/ExternalLibrary/Type/LibraryTypeFactory.php:29:    $this->setCacheBackend($cache_backend, 'libraries_library_type_info');
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibrary.php:3:namespace Drupal\libraries\ExternalLibrary\PhpFile;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibrary.php:6:use Drupal\libraries\ExternalLibrary\Exception\LibraryNotInstalledException;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibrary.php:7:use Drupal\libraries\ExternalLibrary\LibraryBase;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibrary.php:8:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryTrait;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibrary.php:9:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibrary.php:32:   * @param \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface $type
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpRequireLoader.php:3:namespace Drupal\libraries\ExternalLibrary\PhpFile;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpRequireLoader.php:16:    // @todo Because libraries cannot be loaded twice it should be possible to
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLoaderInterface.php:3:namespace Drupal\libraries\ExternalLibrary\PhpFile;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLoaderInterface.php:8: * @see \Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\PhpFile;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibraryInterface.php:5:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibraryInterface.php:8: * Provides an interface for libraries with PHP files.
modules/contrib/libraries/src/ExternalLibrary/PhpFile/PhpFileLibraryInterface.php:10: * @see \Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLoaderInterface
modules/contrib/libraries/src/ExternalLibrary/Utility/LibraryIdAccessorInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Utility;
modules/contrib/libraries/src/ExternalLibrary/Utility/DependencyAccessorTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Utility;
modules/contrib/libraries/src/ExternalLibrary/Utility/DependencyAccessorTrait.php:13:   * @var \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Utility/DependencyAccessorTrait.php:20:   * @return \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Utility/LibraryAccessorInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Utility;
modules/contrib/libraries/src/ExternalLibrary/Utility/LibraryAccessorInterface.php:13:   * @return \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Utility/LibraryIdAccessorTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Utility;
modules/contrib/libraries/src/ExternalLibrary/Utility/IdAccessorTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Utility;
modules/contrib/libraries/src/ExternalLibrary/Utility/IdAccessorTrait.php:23:   * @see \Drupal\libraries\ExternalLibrary\LibraryInterface::getId()
modules/contrib/libraries/src/ExternalLibrary/Utility/IdAccessorTrait.php:24:   * @see \Drupal\libraries\ExternalLibrary\LibraryType\LibraryTypeInterface::getId()
modules/contrib/libraries/src/ExternalLibrary/Utility/LibraryAccessorTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Utility;
modules/contrib/libraries/src/ExternalLibrary/Utility/LibraryAccessorTrait.php:13:   * @var \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Utility/LibraryAccessorTrait.php:20:   * @return \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:3:namespace Drupal\libraries\ExternalLibrary;
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:5:use Drupal\libraries\ExternalLibrary\Dependency\DependentLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:6:use Drupal\libraries\ExternalLibrary\Dependency\DependentLibraryTrait;
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:7:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface;
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:8:use Drupal\libraries\ExternalLibrary\Utility\IdAccessorTrait;
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:9:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:10:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryTrait;
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:30:   * @var \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface
modules/contrib/libraries/src/ExternalLibrary/LibraryBase.php:41:   * @param \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface $type
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:3:namespace Drupal\libraries\ExternalLibrary\Local;
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:4:use Drupal\libraries\ExternalLibrary\Exception\LibraryNotInstalledException;
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:7: * Provides a trait for local libraries utilizing a stream wrapper.
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:16: * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:42:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::isInstalled()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:57:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::setUninstalled()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:70:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryNotInstalledException
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:72:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::getLocalPath()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:76:      /** @var \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface $this */
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryTrait.php:89:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::getLocalPath()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Local;
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:6:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:9: * Provides an interface for local libraries.
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:11: * Local libraries are libraries that can be found on the filesystem. If the
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:19: * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:40:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::isInstalled()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:41:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::setLocalPath()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:51:   * @throws \Drupal\libraries\ExternalLibrary\Exception\LibraryNotInstalledException
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:53:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::setLocalPath()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:63:   * @see \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface::getLocalPath()
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:76:   * @return \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/ExternalLibrary/Local/LocalLibraryInterface.php:78:   * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorInterface.php:3:namespace Drupal\libraries\ExternalLibrary\Local;
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorInterface.php:17:   * @param \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface $library
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorManager.php:3:namespace Drupal\libraries\ExternalLibrary\Local;
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorManager.php:8:use Drupal\libraries\Annotation\Locator;
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorManager.php:13: * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorManager.php:29:    parent::__construct('Plugin/libraries/Locator', $namespaces, $module_handler, LocatorInterface::class, Locator::class);
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorManager.php:30:    $this->alterInfo('libraries_locator_info');
modules/contrib/libraries/src/ExternalLibrary/Local/LocatorManager.php:31:    $this->setCacheBackend($cache_backend, 'libraries_locator_info');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:3:namespace Drupal\libraries\Tests;
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:9: * Tests basic detection and loading of libraries.
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:11: * @group libraries
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:25:  public static $modules = array('libraries', 'libraries_test');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:52:   * Tests libraries_detect_dependencies().
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:59:    libraries_detect_dependencies($library);
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:60:    $this->assertEqual($library['error'], 'missing dependency', 'libraries_detect_dependencies() detects missing dependency');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:102:      // libraries_detect_dependencies() is a post-detect callback, so
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:106:      libraries_detect_dependencies($library);
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:107:      $this->assertTrue($library['installed'], "libraries_detect_dependencies() detects compatible version string: '$version_string' is compatible with '$version'");
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:113:      libraries_detect_dependencies($library);
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:114:      $this->assertEqual($library['error'], 'incompatible dependency', "libraries_detect_dependencies() detects incompatible version strings: '$version_string' is incompatible with '$version'");
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:129:   * Tests libraries_scan_info_files().
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:133:      'uri' => drupal_get_path('module', 'libraries') . '/tests/example/example_info_file.libraries.info.yml',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:134:      'filename' => 'example_info_file.libraries.info.yml',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:135:      'name' => 'example_info_file.libraries.info',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:137:    $actual = libraries_scan_info_files();
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:140:    $this->assertEqual($actual, $expected, 'libraries_scan_info_files() correctly finds the example info file.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:141:    $this->verbose('<pre>' . var_export(libraries_scan_info_files(), TRUE) . '</pre>');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:145:   * Tests libraries_info().
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:151:      'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:158:      'module' => 'libraries_test',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:160:    libraries_info_defaults($expected, 'example_files');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:161:    $library = libraries_info('example_files');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:169:      'info file' => drupal_get_path('module', 'libraries') . '/tests/example/example_info_file.libraries.info.yml',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:171:    libraries_info_defaults($expected, 'example_info_file');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:172:    $library = libraries_info('example_info_file');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:183:   * Tests libraries_detect().
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:187:    $library = libraries_detect('example_missing');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:196:    $library = libraries_detect('example_undetected_version');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:205:    $library = libraries_detect('example_unsupported_version');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:215:    $library = libraries_detect('example_supported_version');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:219:    // Test libraries_get_version().
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:220:    $library = libraries_detect('example_default_version_callback');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:225:    $library = libraries_detect('example_multiple_parameter_version_callback');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:230:    $library = libraries_detect('example_files');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:240:    $library = libraries_detect('example_versions');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:250:    $library = libraries_detect('example_variant_missing');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:260:    $library = libraries_detect('example_variant');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:266:   * Tests libraries_load().
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:272:    $library = libraries_load('example_dependency_missing');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:275:    $library = libraries_load('example_dependency_incompatible');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:278:    $library = libraries_load('example_dependency_compatible');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:281:    $loaded = &drupal_static('libraries_load');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:292:      'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:322:        'info' => array('_libraries_test_info_callback'),
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:323:        'pre-detect' => array('_libraries_test_pre_detect_callback'),
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:324:        'post-detect' => array('_libraries_test_post_detect_callback'),
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:325:        'pre-load' => array('_libraries_test_pre_load_callback'),
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:326:        'post-load' => array('_libraries_test_post_load_callback'),
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:333:      'module' => 'libraries_test',
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:335:    libraries_info_defaults($expected, 'example_callback');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:342:    $library = libraries_info('example_callback');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:348:    // Successfully detected libraries should only contain version information
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:363:    $library = libraries_detect('example_callback');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:369:    // Successfully loaded libraries should only contain information about the
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:375:    $library = libraries_load('example_callback');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:380:    drupal_static_reset('libraries_load');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:386:    $library = libraries_load('example_callback', 'example_variant');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:399:   * @see _libraries_test_load()
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:403:    $this->drupalGet('libraries_test/files');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:407:    $this->drupalGet('libraries_test/integration_files');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:408:    $this->assertRaw('libraries_test.js', 'Integration file loading: libraries_test.js found');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:409:    $this->assertRaw('libraries_test.css', 'Integration file loading: libraries_test.css found');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:410:    $this->assertRaw('libraries_test.inc', 'Integration file loading: libraries_test.inc found');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:413:    $this->drupalGet('libraries_test/versions');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:417:    $this->drupalGet('libraries_test/variant');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:421:    $this->drupalGet('libraries_test/versions_and_variants');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:425:    \Drupal::state()->set('libraries_test.cache', TRUE);
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:426:    \Drupal::cache('libraries')->delete('example_callback');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:429:    $this->drupalGet('libraries_test/cache');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:430:    $this->assertRaw('The <em>info</em> callback group was invoked.', 'Info callback invoked for uncached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:431:    $this->assertRaw('The <em>pre-detect</em> callback group was invoked.', 'Pre-detect callback invoked for uncached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:432:    $this->assertRaw('The <em>post-detect</em> callback group was invoked.', 'Post-detect callback invoked for uncached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:433:    $this->assertRaw('The <em>pre-load</em> callback group was invoked.', 'Pre-load callback invoked for uncached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:434:    $this->assertRaw('The <em>post-load</em> callback group was invoked.', 'Post-load callback invoked for uncached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:437:    $this->drupalGet('libraries_test/cache');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:438:    $this->assertNoRaw('The <em>info</em> callback group was not invoked.', 'Info callback not invoked for cached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:439:    $this->assertNoRaw('The <em>pre-detect</em> callback group was not invoked.', 'Pre-detect callback not invoked for cached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:440:    $this->assertNoRaw('The <em>post-detect</em> callback group was not invoked.', 'Post-detect callback not invoked for cached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:441:    $this->assertRaw('The <em>pre-load</em> callback group was invoked.', 'Pre-load callback invoked for cached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:442:    $this->assertRaw('The <em>post-load</em> callback group was invoked.', 'Post-load callback invoked for cached libraries.');
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:443:    \Drupal::state()->set('libraries_test.cache', FALSE);
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:485:      // @see _libraries_test_load()
modules/contrib/libraries/src/Tests/LibrariesWebTest.php:494:        $filepath = drupal_get_path('module', 'libraries') . "/tests/example/$name.$extension";
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:3:namespace Drupal\libraries\Tests;
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:10: * @group libraries
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:17:  public static $modules = array('libraries');
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:20:   * Tests libraries_get_path().
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:23:    // Note that, even though libraries_get_path() doesn't find the 'example'
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:28:    $this->assertEqual(libraries_get_path('example'), FALSE, 'libraries_get_path() returns FALSE for a missing library.');
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:32:   * Tests libraries_prepare_files().
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:49:    libraries_prepare_files($library, NULL, NULL);
modules/contrib/libraries/src/Tests/LibrariesUnitTest.php:50:    $this->assertEqual($expected, $library, 'libraries_prepare_files() works correctly.');
modules/contrib/libraries/src/StreamWrapper/LocalHiddenStreamTrait.php:3:namespace Drupal\libraries\StreamWrapper;
modules/contrib/libraries/src/StreamWrapper/PrivateStreamTrait.php:3:namespace Drupal\libraries\StreamWrapper;
modules/contrib/libraries/src/StreamWrapper/AssetLibrariesStream.php:3:namespace Drupal\libraries\StreamWrapper;
modules/contrib/libraries/src/StreamWrapper/AssetLibrariesStream.php:8: * Provides a stream wrapper for asset libraries.
modules/contrib/libraries/src/StreamWrapper/PhpFileLibrariesStream.php:3:namespace Drupal\libraries\StreamWrapper;
modules/contrib/libraries/src/StreamWrapper/PhpFileLibrariesStream.php:8: * Provides a stream wrapper for PHP file libraries.
modules/contrib/libraries/src/StreamWrapper/PhpFileLibrariesStream.php:37:    return 'sites/all/libraries';
modules/contrib/libraries/src/StreamWrapper/LibraryDefinitionsStream.php:3:namespace Drupal\libraries\StreamWrapper;
modules/contrib/libraries/src/StreamWrapper/LibraryDefinitionsStream.php:82:      ->get('libraries.settings')
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/StaticDetector.php:3:namespace Drupal\libraries\Plugin\libraries\VersionDetector;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/StaticDetector.php:6:use Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/StaticDetector.php:7:use Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/StaticDetector.php:8:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/LinePatternDetector.php:3:namespace Drupal\libraries\Plugin\libraries\VersionDetector;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/LinePatternDetector.php:7:use Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/LinePatternDetector.php:8:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/LinePatternDetector.php:9:use Drupal\libraries\ExternalLibrary\Version\VersionDetectorInterface;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/LinePatternDetector.php:10:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/VersionDetector/LinePatternDetector.php:21: * @ingroup libraries
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:3:namespace Drupal\libraries\Plugin\libraries\Locator;
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:8:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:9:use Drupal\libraries\ExternalLibrary\Local\LocatorInterface;
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:17: * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:54:      $container->get('plugin.manager.libraries.locator')
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:61:   * @param \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface $library
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:64:   * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface::locate()
modules/contrib/libraries/src/Plugin/libraries/Locator/GlobalLocator.php:67:    foreach ($this->configFactory->get('libraries.settings')->get('global_locators') as $locator) {
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:3:namespace Drupal\libraries\Plugin\libraries\Locator;
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:5:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:6:use Drupal\libraries\ExternalLibrary\Local\LocatorInterface;
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:13: * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:20:   * @var \Drupal\libraries\ExternalLibrary\Local\LocatorInterface[]
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:27:   * @param \Drupal\libraries\ExternalLibrary\Local\LocatorInterface $locator
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:38:   * @param \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface $library
modules/contrib/libraries/src/Plugin/libraries/Locator/ChainLocator.php:41:   * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface::locate()
modules/contrib/libraries/src/Plugin/libraries/Locator/UriLocator.php:3:namespace Drupal\libraries\Plugin\libraries\Locator;
modules/contrib/libraries/src/Plugin/libraries/Locator/UriLocator.php:7:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/Locator/UriLocator.php:8:use Drupal\libraries\ExternalLibrary\Local\LocatorInterface;
modules/contrib/libraries/src/Plugin/libraries/Locator/UriLocator.php:9:use Drupal\libraries\Plugin\MissingPluginConfigurationException;
modules/contrib/libraries/src/Plugin/libraries/Locator/UriLocator.php:24: * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface
modules/contrib/libraries/src/Plugin/libraries/Locator/UriLocator.php:68:   * @param \Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface $library
modules/contrib/libraries/src/Plugin/libraries/Locator/UriLocator.php:71:   * @see \Drupal\libraries\ExternalLibrary\Local\LocatorInterface::locate()
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:3:namespace Drupal\libraries\Plugin\libraries\Type;
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:6:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:7:use Drupal\libraries\ExternalLibrary\Type\LibraryLoadingListenerInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:8:use Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLibrary;
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:9:use Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLoaderInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:10:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeBase;
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:21:   * @var \Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLoaderInterface
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:34:   * @param \Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLoaderInterface $php_file_loader
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:48:      $container->get('plugin.manager.libraries.locator'),
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:49:      $container->get('plugin.manager.libraries.version_detector'),
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:50:      $container->get('libraries.php_file_loader')
modules/contrib/libraries/src/Plugin/libraries/Type/PhpFileLibraryType.php:65:    /** @var \Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLibraryInterface $library */
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:3:namespace Drupal\libraries\Plugin\libraries\Type;
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:5:use Drupal\libraries\ExternalLibrary\Asset\AssetLibrary;
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:6:use Drupal\libraries\ExternalLibrary\Asset\AttachableAssetLibraryRegistrationInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:7:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:8:use Drupal\libraries\ExternalLibrary\LibraryManagerInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:9:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeBase;
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:27:    assert('$library instanceof \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface');
modules/contrib/libraries/src/Plugin/libraries/Type/AssetLibraryType.php:28:    /** @var \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryInterface $library */
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:3:namespace Drupal\libraries\Plugin\libraries\Type;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:5:use Drupal\libraries\ExternalLibrary\Asset\AttachableAssetLibraryRegistrationInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:6:use Drupal\libraries\ExternalLibrary\Asset\MultipleAssetLibrary;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:7:use Drupal\libraries\ExternalLibrary\Asset\MultipleAssetLibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:8:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:9:use Drupal\libraries\ExternalLibrary\LibraryManagerInterface;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:10:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeBase;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:28:    assert('$external_library instanceof \Drupal\libraries\ExternalLibrary\Asset\MultipleAssetLibraryInterface');
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:29:    /** @var \Drupal\libraries\ExternalLibrary\Asset\MultipleAssetLibraryInterface $external_library */
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:30:    $attachable_libraries = [];
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:33:      $attachable_libraries[$attachable_library_id] = $attachable_library;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:35:    return $attachable_libraries;
modules/contrib/libraries/src/Plugin/libraries/Type/MultipleAssetLibraryType.php:39:   * @param \Drupal\libraries\ExternalLibrary\LibraryInterface $external_library
modules/contrib/libraries/src/Plugin/MissingPluginConfigurationException.php:3:namespace Drupal\libraries\Plugin;
modules/contrib/libraries/src/Annotation/Locator.php:3:namespace Drupal\libraries\Annotation;
modules/contrib/libraries/src/Annotation/VersionDetector.php:3:namespace Drupal\libraries\Annotation;
modules/contrib/libraries/src/Annotation/LibraryType.php:3:namespace Drupal\libraries\Annotation;
modules/contrib/libraries/src/Config/LibrariesConfigSubscriber.php:3:namespace Drupal\libraries\Config;
modules/contrib/libraries/src/Config/LibrariesConfigSubscriber.php:11: * Reacts to configuration changes of the 'libraries.settings' configuration.
modules/contrib/libraries/src/Config/LibrariesConfigSubscriber.php:39:    if (($event->getConfig()->getName() === 'libraries.settings') && $event->isChanged('definition')) {
modules/contrib/libraries/src/Config/LibrariesConfigSubscriber.php:40:      $this->container->set('libraries.definition.discovery', NULL);
modules/contrib/libraries/libraries.drush.inc:13:function libraries_drush_command() {
modules/contrib/libraries/libraries.drush.inc:14:  $items['libraries-list'] = array(
modules/contrib/libraries/libraries.drush.inc:15:    'callback' => 'libraries_drush_list',
modules/contrib/libraries/libraries.drush.inc:19:  /**$items['libraries-download'] = array(
modules/contrib/libraries/libraries.drush.inc:20:    'callback' => 'libraries_drush_download',
modules/contrib/libraries/libraries.drush.inc:21:    'description' => dt('Downloads a registered library into the libraries directory for the active site.'),
modules/contrib/libraries/libraries.drush.inc:32:function libraries_drush_help($section) {
modules/contrib/libraries/libraries.drush.inc:34:    case 'drush:libraries-list':
modules/contrib/libraries/libraries.drush.inc:37:    case 'drush:libraries-download':
modules/contrib/libraries/libraries.drush.inc:38:      return dt('Downloads a registered library into the libraries directory for the active site.
modules/contrib/libraries/libraries.drush.inc:40:See libraries-list for a list of registered libraries.');
modules/contrib/libraries/libraries.drush.inc:49:function libraries_drush_cache_clear(&$types) {
modules/contrib/libraries/libraries.drush.inc:50:  $types['libraries'] = 'libraries_drush_invalidate_cache';
modules/contrib/libraries/libraries.drush.inc:56:function libraries_drush_invalidate_cache() {
modules/contrib/libraries/libraries.drush.inc:57:  \Drupal::cache('libraries')->deleteAll();
modules/contrib/libraries/libraries.drush.inc:63:function libraries_drush_list() {
modules/contrib/libraries/libraries.drush.inc:64:  $libraries = array();
modules/contrib/libraries/libraries.drush.inc:65:  foreach (libraries_info() as $name => $info) {
modules/contrib/libraries/libraries.drush.inc:66:    $libraries[$name] = libraries_detect($name);
modules/contrib/libraries/libraries.drush.inc:68:  ksort($libraries);
modules/contrib/libraries/libraries.drush.inc:70:  if (empty($libraries)) {
modules/contrib/libraries/libraries.drush.inc:71:    drush_print('There are no registered libraries.');
modules/contrib/libraries/libraries.drush.inc:79:    foreach ($libraries as $name => $library) {
modules/contrib/libraries/libraries.drush.inc:109:function libraries_drush_download($name) {
modules/contrib/libraries/libraries.drush.inc:123:    $path = 'sites/all/libraries';
modules/contrib/libraries/libraries.install:8:use Drupal\libraries\ExternalLibrary\Definition\FileDefinitionDiscovery;
modules/contrib/libraries/libraries.install:13:function libraries_install() {
modules/contrib/libraries/libraries.install:24:function libraries_uninstall() {
modules/contrib/libraries/tests/library_definitions/test_asset_multiple_library.json:10:  "libraries": {
modules/contrib/libraries/tests/libraries/test_php_file_library/test_php_file_library.php:9: * @see \Drupal\Tests\libraries\Kernel\ExternalLibrary\PhpFile\PhpFileLibraryTest
modules/contrib/libraries/tests/libraries/test_php_file_library/test_php_file_library.php:15:function _libraries_test_php_function() {
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:3:namespace Drupal\Tests\libraries\Functional\ExternalLibrary\Definition;
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:12: * @group libraries
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:19:   * The 'libraries.settings' configuration object.
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:35:  public static $modules = ['libraries'];
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:45:    $this->config = $config_factory->getEditable('libraries.settings');
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:50:    $module_path = $module_handler->getModule('libraries')->getPath();
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:77:    $discovery_service_id = 'libraries.definition.discovery';
modules/contrib/libraries/tests/src/Functional/ExternalLibrary/Definition/DefinitionDiscoveryFactoryTest.php:108:    /** @var \Drupal\libraries\ExternalLibrary\Definition\DefinitionDiscoveryInterface $discovery */
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:3:namespace Drupal\Tests\libraries\Unit\Plugin\libraries\VersionDetector;
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:5:use Drupal\libraries\ExternalLibrary\Local\LocalLibraryInterface;
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:6:use Drupal\libraries\ExternalLibrary\Version\VersionedLibraryInterface;
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:7:use Drupal\libraries\Plugin\libraries\VersionDetector\LinePatternDetector;
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:14: * @group libraries
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:16: * @coversDefaultClass \Drupal\libraries\Plugin\libraries\VersionDetector\LinePatternDetector
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:25:   * @expectedException \Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:38:   * @expectedException \Drupal\libraries\ExternalLibrary\Exception\UnknownLibraryVersionException
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:157:    $library->getLocalPath()->willReturn('libraries/' . $this->libraryId);
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:167:   * @return \Drupal\libraries\Plugin\libraries\VersionDetector\LinePatternDetector
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:178:      'provider' => 'libraries',
modules/contrib/libraries/tests/src/Unit/Plugin/libraries/VersionDetector/LinePatternDetectorTest.php:189:      'libraries' => [
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:3:namespace Drupal\Tests\libraries\Kernel\ExternalLibrary\Asset;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:5:use Drupal\Tests\libraries\Kernel\ExternalLibrary\TestLibraryFilesStream;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:8: * Tests that external asset libraries are registered as core asset libraries.
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:10: * @group libraries
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:25:    /** @var \Drupal\libraries\ExternalLibrary\Asset\AttachableAssetLibraryRegistrationInterface $library_type */
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:42:   * @see \Drupal\libraries\Extension\Extension
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:43:   * @see \Drupal\libraries\Extension\ExtensionHandler
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:44:   * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibrary
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:45:   * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryTrait
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:46:   * @see \Drupal\libraries\ExternalLibrary\ExternalLibraryManager
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:47:   * @see \Drupal\libraries\ExternalLibrary\ExternalLibraryTrait
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:48:   * @see \Drupal\libraries\ExternalLibrary\Registry\ExternalLibraryRegistry
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:51:    $library = $this->coreLibraryDiscovery->getLibraryByName('libraries', 'test_asset_library');
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:81:    $this->container->set('stream_wrapper.asset_libraries', new TestLibraryFilesStream(
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTest.php:87:    $library = $this->coreLibraryDiscovery->getLibraryByName('libraries', 'test_asset_library');
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTestBase.php:3:namespace Drupal\Tests\libraries\Kernel\ExternalLibrary\Asset;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTestBase.php:5:use Drupal\Tests\libraries\Kernel\LibraryTypeKernelTestBase;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/AssetLibraryTestBase.php:17:   * @see \Drupal\libraries\ExternalLibrary\LibraryManager::getRequiredLibraryIds()
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:3:namespace Drupal\Tests\libraries\Kernel\ExternalLibrary\Asset;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:5:use Drupal\Tests\libraries\Kernel\ExternalLibrary\TestLibraryFilesStream;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:8: * Tests that external asset libraries can register multiple core libraries.
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:10: * @group libraries
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:25:    /** @var \Drupal\libraries\ExternalLibrary\Asset\AttachableAssetLibraryRegistrationInterface $library_type */
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:48:   * @see \Drupal\libraries\Extension\Extension
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:49:   * @see \Drupal\libraries\Extension\ExtensionHandler
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:50:   * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibrary
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:51:   * @see \Drupal\libraries\ExternalLibrary\Asset\AssetLibraryTrait
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:52:   * @see \Drupal\libraries\ExternalLibrary\ExternalLibraryManager
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:53:   * @see \Drupal\libraries\ExternalLibrary\ExternalLibraryTrait
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:54:   * @see \Drupal\libraries\ExternalLibrary\Registry\ExternalLibraryRegistry
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:57:    $library = $this->coreLibraryDiscovery->getLibraryByName('libraries', 'test_asset_multiple_library.first');
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:82:    $library = $this->coreLibraryDiscovery->getLibraryByName('libraries', 'test_asset_multiple_library.second');
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:112:    $this->container->set('stream_wrapper.asset_libraries', new TestLibraryFilesStream(
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:119:    $library = $this->coreLibraryDiscovery->getLibraryByName('libraries', 'test_asset_multiple_library.first');
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/Asset/MultipleAssetLibraryTest.php:145:    $library = $this->coreLibraryDiscovery->getLibraryByName('libraries', 'test_asset_multiple_library.second');
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:3:namespace Drupal\Tests\libraries\Kernel\ExternalLibrary;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:5:use Drupal\Tests\libraries\Kernel\ExternalLibrary\TestLibraryFilesStream;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:6:use Drupal\Tests\libraries\Kernel\LibraryTypeKernelTestBase;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:9: * Tests that a global locator can be properly used to load a libraries.
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:11: * @group libraries
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:23:    $this->container->set('stream_wrapper.asset_libraries', new TestLibraryFilesStream(
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:26:      'libraries'
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/GlobalLocatorTest.php:46:    $config_factory->getEditable('libraries.settings')
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:3:namespace Drupal\Tests\libraries\Kernel\ExternalLibrary\PhpFile;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:5:use Drupal\Tests\libraries\Kernel\ExternalLibrary\TestLibraryFilesStream;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:6:use Drupal\Tests\libraries\Kernel\LibraryTypeKernelTestBase;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:9: * Tests that the external library manager properly loads PHP file libraries.
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:11: * @group libraries
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:21:    $this->container->set('stream_wrapper.php_file_libraries', new TestLibraryFilesStream(
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:24:      'libraries'
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:39:    /** @var \Drupal\libraries\ExternalLibrary\PhpFile\PhpFileLibrary $library */
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:42:    $library_path = $this->modulePath . '/tests/libraries/test_php_file_library';
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:50:   * @see \Drupal\libraries\ExternalLibrary\ExternalLibraryManager
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:51:   * @see \Drupal\libraries\ExternalLibrary\ExternalLibraryTrait
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:52:   * @see \Drupal\libraries\ExternalLibrary\PhpFile\PhpRequireLoader
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/PhpFile/PhpFileLibraryTest.php:55:    $function_name = '_libraries_test_php_function';
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/TestLibraryFilesStream.php:3:namespace Drupal\Tests\libraries\Kernel\ExternalLibrary;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/TestLibraryFilesStream.php:9:use Drupal\libraries\StreamWrapper\LocalHiddenStreamTrait;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/TestLibraryFilesStream.php:10:use Drupal\libraries\StreamWrapper\PrivateStreamTrait;
modules/contrib/libraries/tests/src/Kernel/ExternalLibrary/TestLibraryFilesStream.php:76:    $module_path = $this->moduleHandler->getModule('libraries')->getPath();
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:3:namespace Drupal\Tests\libraries\Kernel;
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:7:use Drupal\libraries\ExternalLibrary\Exception\LibraryDefinitionNotFoundException;
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:8:use Drupal\libraries\ExternalLibrary\Exception\LibraryTypeNotFoundException;
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:9:use Drupal\libraries\ExternalLibrary\LibraryInterface;
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:10:use Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface;
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:20:   * @var \Drupal\libraries\ExternalLibrary\LibraryManagerInterface
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:41:  public static $modules = ['libraries', 'libraries_test'];
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:58:    $this->modulePath = $module_handler->getModule('libraries')->getPath();
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:60:    $this->installConfig('libraries');
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:65:    $config_factory->getEditable('libraries.settings')
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:77:    $this->libraryManager = $this->container->get('libraries.manager');
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:78:    $this->libraryTypeFactory = $this->container->get('plugin.manager.libraries.library_type');
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:119:   * @return \Drupal\libraries\ExternalLibrary\Type\LibraryTypeInterface
modules/contrib/libraries/tests/src/Kernel/LibraryTypeKernelTestBase.php:150:   * @return \Drupal\libraries\ExternalLibrary\LibraryInterface
modules/contrib/libraries/tests/example/example_1.js:6: * Replace the text in the 'libraries-test-javascript' div. See README.txt for
modules/contrib/libraries/tests/example/example_1.js:12:Drupal.behaviors.librariesTest = {
modules/contrib/libraries/tests/example/example_1.js:14:    $('.libraries-test-javascript').text('If this text shows up, example_1.js was loaded successfully.')
modules/contrib/libraries/tests/example/README.txt:19:  'example_4.js' or 'libraries_test.js'. If you have SimpleTest's verbose mode
modules/contrib/libraries/tests/example/README.txt:32:  - libraries_test: purple"
modules/contrib/libraries/tests/example/README.txt:40:files are libraries_test.js, libraries_test.css, libraries_test.inc and are
modules/contrib/libraries/tests/example/README.txt:41:located in the tests directory alongside libraries_test.module (i.e. they are
modules/contrib/libraries/tests/example/example_3.css:6: * Color the 'libraries-test-css' div orange. See README.txt for more information.
modules/contrib/libraries/tests/example/example_3.css:9:.libraries-test-css {
modules/contrib/libraries/tests/example/example_2.css:6: * Color the 'libraries-test-css' div green. See README.txt for more information.
modules/contrib/libraries/tests/example/example_2.css:9:.libraries-test-css {
modules/contrib/libraries/tests/example/example_info_file.libraries.info.yml:7:project: 'libraries'
modules/contrib/libraries/tests/example/example_1.css:6: * Color the 'libraries-test-css' div red. See README.txt for more information.
modules/contrib/libraries/tests/example/example_1.css:9:.libraries-test-css {
modules/contrib/libraries/tests/example/example_1.php:11:function _libraries_test_example_1() {
modules/contrib/libraries/tests/example/example_3.php:11:function _libraries_test_example_3() {
modules/contrib/libraries/tests/example/example_2.js:6: * Replace the text in the 'libraries-test-javascript' div. See README.txt for
modules/contrib/libraries/tests/example/example_2.js:12:Drupal.behaviors.librariesTest = {
modules/contrib/libraries/tests/example/example_2.js:14:    $('.libraries-test-javascript').text('If this text shows up, example_2.js was loaded successfully.')
modules/contrib/libraries/tests/example/example_3.js:6: * Replace the text in the 'libraries-test-javascript' div. See README.txt for
modules/contrib/libraries/tests/example/example_3.js:12:Drupal.behaviors.librariesTest = {
modules/contrib/libraries/tests/example/example_3.js:14:    $('.libraries-test-javascript').text('If this text shows up, example_3.js was loaded successfully.')
modules/contrib/libraries/tests/example/example_4.css:6: * Color the 'libraries-test-css' div blue. See README.txt for more information.
modules/contrib/libraries/tests/example/example_4.css:9:.libraries-test-css {
modules/contrib/libraries/tests/example/example_2.php:11:function _libraries_test_example_2() {
modules/contrib/libraries/tests/example/example_4.js:6: * Replace the text in the 'libraries-test-javascript' div. See README.txt for
modules/contrib/libraries/tests/example/example_4.js:12:Drupal.behaviors.librariesTest = {
modules/contrib/libraries/tests/example/example_4.js:14:    $('.libraries-test-javascript').text('If this text shows up, example_4.js was loaded successfully.')
modules/contrib/libraries/tests/example/example_4.php:11:function _libraries_test_example_4() {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.info.yml:6:  - libraries
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.info.yml:15:project: 'libraries'
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:1:libraries_test_files:
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:2:  path: '/libraries_test/files'
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:4:    _controller: Drupal\libraries_test\Controller\ExampleController::files
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:7:libraries_test_integration_files:
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:8:  path: '/libraries_test/integration_files'
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:10:    _controller: Drupal\libraries_test\Controller\ExampleController::integration
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:13:libraries_test_versions:
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:14:  path: '/libraries_test/versions'
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:16:    _controller: Drupal\libraries_test\Controller\ExampleController::versions
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:19:libraries_test_variant:
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:20:  path: '/libraries_test/variant'
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:22:    _controller: Drupal\libraries_test\Controller\ExampleController::variant
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:25:libraries_test_versions_and_variants:
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:26:  path: '/libraries_test/versions_and_variants'
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:28:    _controller: Drupal\libraries_test\Controller\ExampleController::versionsAndVariants
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:31:libraries_test_cache:
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:32:  path: '/libraries_test/cache'
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.routing.yml:34:    _controller: Drupal\libraries_test\Controller\ExampleController::cache
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.css:6: * Color the 'libraries-test-css' div purple. See README.txt for more
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.css:10:.libraries-test-css {
modules/contrib/libraries/tests/modules/libraries_test/src/Controller/ExampleController.php:3:namespace Drupal\libraries_test\Controller;
modules/contrib/libraries/tests/modules/libraries_test/src/Controller/ExampleController.php:26:    libraries_load($library, $variant);
modules/contrib/libraries/tests/modules/libraries_test/src/Controller/ExampleController.php:34:    $output .= '<div class="libraries-test-javascript">';
modules/contrib/libraries/tests/modules/libraries_test/src/Controller/ExampleController.php:41:    $output .= '<div class="libraries-test-css">';
modules/contrib/libraries/tests/modules/libraries_test/src/Controller/ExampleController.php:50:    $output .= '<li>libraries_test: purple</li>';
modules/contrib/libraries/tests/modules/libraries_test/src/Controller/ExampleController.php:55:    $output .= '<div class="libraries-test-php">';
modules/contrib/libraries/tests/modules/libraries_test/src/Controller/ExampleController.php:60:      if ((strpos($file, 'libraries/test') || strpos($file, 'libraries_test')) && !strpos($file, 'libraries_test.module') && !strpos($file, 'lib/Drupal/libraries_test')) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.js:6: * Replace the text in the 'libraries-test-javascript' div. See README.txt for
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.js:12:Drupal.behaviors.librariesTest = {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.js:14:    $('.libraries-test-javascript').text('If this text shows up, libraries_test.js was loaded successfully.')
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.inc:11:function _libraries_test_integration_file() {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:11: * Implements hook_libraries_info().
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:13:function libraries_test_libraries_info() {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:15:  $libraries['example_missing'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:17:    'library path' => drupal_get_path('module', 'libraries') . '/tests/missing',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:19:  $libraries['example_undetected_version'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:21:    'library path' => drupal_get_path('module', 'libraries') . '/tests',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:22:    'version callback' => '_libraries_test_return_version',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:25:  $libraries['example_unsupported_version'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:27:    'library path' => drupal_get_path('module', 'libraries') . '/tests',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:28:    'version callback' => '_libraries_test_return_version',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:35:  $libraries['example_supported_version'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:37:    'library path' => drupal_get_path('module', 'libraries') . '/tests',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:38:    'version callback' => '_libraries_test_return_version',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:46:  $libraries['example_default_version_callback'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:48:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:58:  $libraries['example_multiple_parameter_version_callback'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:60:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:62:    'version callback' => '_libraries_test_get_version',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:67:  $libraries['example_files'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:69:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:79:  // Normally added by the corresponding module via hook_libraries_info_alter(),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:81:  $libraries['example_integration_files'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:83:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:86:      'libraries_test' => array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:87:        'js' => array('libraries_test.js'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:88:        'css' => array('libraries_test.css'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:89:        'php' => array('libraries_test.inc'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:95:  $libraries['example_versions'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:97:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:118:  $libraries['example_variant_missing'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:120:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:129:        'variant callback' => '_libraries_test_return_installed',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:135:  $libraries['example_variant'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:137:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:146:        'variant callback' => '_libraries_test_return_installed',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:153:  $libraries['example_versions_and_variants'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:155:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:166:            'variant callback' => '_libraries_test_return_installed',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:175:            'variant callback' => '_libraries_test_return_installed',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:188:            'variant callback' => '_libraries_test_return_installed',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:197:            'variant callback' => '_libraries_test_return_installed',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:207:  // libraries_load().
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:208:  // This library acts as a dependency for the libraries below.
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:209:  $libraries['example_dependency'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:211:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:215:  $libraries['example_dependency_missing'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:217:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:222:  $libraries['example_dependency_incompatible'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:224:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:229:  $libraries['example_dependency_compatible'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:231:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:238:  $libraries['example_callback'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:240:    'library path' => drupal_get_path('module', 'libraries') . '/tests/example',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:273:      'info' => array('_libraries_test_info_callback'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:274:      'pre-detect' => array('_libraries_test_pre_detect_callback'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:275:      'post-detect' => array('_libraries_test_post_detect_callback'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:276:      'pre-load' => array('_libraries_test_pre_load_callback'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:277:      'post-load' => array('_libraries_test_post_load_callback'),
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:287:  return $libraries;
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:291: * Implements hook_libraries_info_file_paths()
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:293:function libraries_test_libraries_info_file_paths() {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:294:  return array(drupal_get_path('module', 'libraries') . '/tests/example');
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:301: * function cannot be collapsed with _libraries_test_return_installed(), because
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:304:function _libraries_test_return_version($library, $version) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:312: * exact copy of libraries_get_version(), which uses a single $option argument,
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:338: * @see libraries_get_version()
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:340:function _libraries_test_get_version($library, $file, $pattern, $lines = 20, $cols = 200) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:361: * cannot be collapsed with _libraries_test_return_version(), because of the
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:364:function _libraries_test_return_installed($library, $name, $installed) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:373: * @see _libraries_test_callback()
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:375:function _libraries_test_info_callback(&$library, $version, $variant) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:376:  _libraries_test_callback($library, $version, $variant, 'info');
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:384: * @see _libraries_test_callback()
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:386:function _libraries_test_pre_detect_callback(&$library, $version, $variant) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:387:  _libraries_test_callback($library, $version, $variant, 'pre-detect');
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:395: * @see _libraries_test_callback()
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:397:function _libraries_test_post_detect_callback(&$library, $version, $variant) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:398:  _libraries_test_callback($library, $version, $variant, 'post-detect');
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:406: * @see _libraries_test_callback()
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:408:function _libraries_test_pre_load_callback(&$library, $version, $variant) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:409:  _libraries_test_callback($library, $version, $variant, 'pre-load');
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:417: * @see _libraries_test_callback()
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:419:function _libraries_test_post_load_callback(&$library, $version, $variant) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:420:  _libraries_test_callback($library, $version, $variant, 'post-load');
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:444:function _libraries_test_callback(&$library, $version, $variant, $group) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:463:  if (!isset($version) && !isset($variant) && \Drupal::state()->get('libraries_test.cache', FALSE)) {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:471:function libraries_test_menu() {
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:472:  $items['libraries_test/files'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:474:    'route_name' => 'libraries_test_files',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:476:  $items['libraries_test/integration_files'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:478:    'route_name' => 'libraries_test_integration_files',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:480:  $items['libraries_test/versions'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:482:    'route_name' => 'libraries_test_versions',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:484:  $items['libraries_test/variant'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:486:    'route_name' => 'libraries_test_variant',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:488:  $items['libraries_test/versions_and_variants'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:490:    'route_name' => 'libraries_test_versions_and_variants',
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:492:  $items['libraries_test/cache'] = array(
modules/contrib/libraries/tests/modules/libraries_test/libraries_test.module:494:    'route_name' => 'libraries_test_cache',
modules/contrib/libraries/config/install/libraries.settings.yml:4:    # sites/all/libraries.
modules/contrib/libraries/config/install/libraries.settings.yml:9:      - 'http://cgit.drupalcode.org/libraries_registry/plain/registry/8'
modules/contrib/libraries/config/schema/libraries.schema.yml:4:libraries.settings:
modules/contrib/libraries/config/schema/libraries.schema.yml:43:            type: libraries.locator.[%parent.id]
modules/contrib/libraries/config/schema/libraries.schema.yml:47:libraries.locator.uri:
modules/contrib/captcha/image_captcha/src/Form/ImageCaptchaSettingsForm.php:321:            '%fonts_library_general' => 'sites/all/libraries/fonts',
modules/contrib/captcha/image_captcha/src/Form/ImageCaptchaSettingsForm.php:322:            '%fonts_library_specific' => conf_path() . '/libraries/fonts',
modules/contrib/captcha/image_captcha/src/Form/ImageCaptchaSettingsForm.php:385:        'sites/all/libraries/fonts',
modules/contrib/captcha/image_captcha/src/Form/ImageCaptchaSettingsForm.php:386:        conf_path() . '/libraries/fonts',
modules/contrib/captcha/image_captcha/fonts/README.txt:6:modules and themes, in the "libraries" folders sites/all/libraries/fonts
modules/contrib/captcha/image_captcha/fonts/README.txt:7:or sites/<site>/libraries/fonts. 
modules/contrib/facets/modules/facets_range_widget/README.txt:11:    - create the /libraries/jquery-ui-slider-pips folder.
modules/contrib/facets/modules/facets_range_widget/facets_range_widget.libraries.yml:9:    /libraries/jquery-ui-slider-pips/jquery-ui-slider-pips.min.js: { minified: true }
modules/contrib/facets/modules/facets_range_widget/facets_range_widget.libraries.yml:12:      /libraries/jquery-ui-slider-pips/jquery-ui-slider-pips.min.css: { minified: true }
modules/contrib/blazy/blazy.module:111:function blazy_library_info_alter(&$libraries, $extension) {
modules/contrib/blazy/blazy.module:112:  if ($extension === 'blazy' && function_exists('libraries_get_path')) {
modules/contrib/blazy/blazy.module:113:    $libraries['blazy']['js'] = ['/' . libraries_get_path('blazy') . '/blazy.min.js' => ['weight' => -4]];
modules/contrib/blazy/blazy.module:134:  if (is_file(DRUPAL_ROOT . '/libraries/photobox/photobox/jquery.photobox.js')) {
modules/contrib/blazy/blazy.libraries.yml:10:    /libraries/blazy/blazy.min.js: { weight: -4, minified: true }
modules/contrib/blazy/blazy.libraries.yml:84:    /libraries/photobox/photobox/jquery.photobox.js: { minified: true }
modules/contrib/blazy/blazy.libraries.yml:88:      /libraries/photobox/photobox/photobox.css: {}
modules/contrib/blazy/README.txt:35:    /libraries/blazy/blazy.min.js
modules/contrib/blazy/CHANGELOG.txt:65:- Fixed for Blazy libraries weight regression at hook_library_info_alter().
modules/contrib/blazy/CHANGELOG.txt:320:- #2768463 by chr.fritsch: Add libraries support.
modules/contrib/blazy/src/BlazyManagerBase.php:171:    // Core Blazy libraries.
modules/contrib/blazy/blazy.api.php:70: *   o Use \Drupal\blazy\BlazyManager::attach() to load relevant libraries.
modules/contrib/blazy/blazy.api.php:92: *   // Finally attach libraries as requested via $settings.
modules/contrib/devel/webprofiler/webprofiler.make.yml:4:libraries:
modules/contrib/devel/webprofiler/webprofiler.libraries.yml:9:    /libraries/d3/d3.min.js: {}
modules/contrib/devel/webprofiler/webprofiler.libraries.yml:18:    /libraries/highlightjs/highlight.pack.js: {}
modules/contrib/devel/webprofiler/webprofiler.libraries.yml:21:      /libraries/highlightjs/styles/idea.css: {}
modules/contrib/devel/webprofiler/templates/Collector/theme.html.twig:76:                    <td><%= Drupal.webprofiler.helpers.frm(data.activeTheme.libraries) %></td>
modules/contrib/devel/webprofiler/src/DataCollector/ThemeDataCollector.php:68:      'libraries' => $activeTheme->getLibraries(),
modules/contrib/devel/webprofiler/src/DrupalDataCollectorInterface.php:51:   * Returns the libraries needed in detail panel.
modules/contrib/devel/webprofiler/src/Controller/DashboardController.php:92:    $libraries = ['webprofiler/dashboard'];
modules/contrib/devel/webprofiler/src/Controller/DashboardController.php:126:        $libraries = array_merge($libraries, $collector->getLibraries());
modules/contrib/devel/webprofiler/src/Controller/DashboardController.php:141:        'library' => $libraries,
modules/contrib/devel/webprofiler/README.md:13:1\. Run `composer require --prefer-dist composer/installers` to ensure that you have the `composer/installers` package installed. This package facilitates the installation of packages into directories other than `/vendor` (e.g. `/libraries`) using Composer.
modules/contrib/devel/webprofiler/README.md:18:"libraries/{$name}": ["type:drupal-library"],
modules/contrib/devel/webprofiler/README.md:50:under `/libraries`
modules/contrib/devel/webprofiler/README.md:56:  - Create a `/libraries/d3/` directory below your Drupal root directory
modules/contrib/devel/webprofiler/README.md:58:  - Rename it to `/libraries/d3/d3.min.js`
modules/contrib/devel/webprofiler/README.md:64:  - Create `/libraries/highlightjs/` directory below your Drupal root directory
modules/contrib/devel/src/Form/SettingsForm.php:133:      '#description' => $this->t('Select the debugging tool used for formatting and displaying the variables inspected through the debug functions of Devel. You can enable the <a href=":kint_install">Kint module</a> (shipped with Devel) and select the Kint debugging tool for an improved debugging experience. <strong>NOTE</strong>: Some of these plugins require external libraries for to be enabled. Learn how install external libraries with <a href=":url">Composer</a>.', [':url' => 'https://www.drupal.org/node/2404989', ':kint_install' => Url::fromRoute('system.modules_list')->toString()]),
modules/contrib/devel/tests/src/Functional/DevelDumperTest.php:136:    // Ensures that plugins can add libraries to the page when the
modules/contrib/token/token.module:484:    // Add additional libraries, JavaScript, CSS and other data attached
modules/contrib/entity_print/src/Asset/AssetCollector.php:58:    $libraries = [];
modules/contrib/entity_print/src/Asset/AssetCollector.php:65:        $libraries = array_merge($libraries, (array) $theme_info['entity_print']['all']);
modules/contrib/entity_print/src/Asset/AssetCollector.php:70:        $this->buildCssForEntity($entity, $theme_info['entity_print'], $libraries);
modules/contrib/entity_print/src/Asset/AssetCollector.php:74:    $this->dispatcher->dispatch(PrintEvents::CSS_ALTER, new PrintCssAlterEvent($libraries, $entities));
modules/contrib/entity_print/src/Asset/AssetCollector.php:76:    return $libraries;
modules/contrib/entity_print/src/Asset/AssetCollector.php:85:   *   A list of css libraries to add.
modules/contrib/entity_print/src/Asset/AssetCollector.php:86:   * @param array $libraries
modules/contrib/entity_print/src/Asset/AssetCollector.php:87:   *   A list of CSS libraries.
modules/contrib/entity_print/src/Asset/AssetCollector.php:89:  protected function buildCssForEntity(EntityInterface $entity, array $theme_info, array &$libraries) {
modules/contrib/entity_print/src/Asset/AssetCollector.php:100:          $libraries = array_merge($libraries, (array) $css);
modules/contrib/entity_print/src/Asset/AssetRenderer.php:65:    // array but now passes a list of libraries. So, if users of the API have
modules/contrib/entity_print/src/Asset/AssetRenderer.php:66:    // treated it like a render array, we move the libraries into the correct
modules/contrib/entity_print/src/Event/PrintCssAlterEvent.php:8: * This event allows the CSS libraries to be altered.
modules/contrib/php/php.module:32:function php_library_info_alter(&$libraries, $extension) {
modules/contrib/php/php.module:34:  if ($extension == 'block' && isset($libraries['drupal.block'])) {
modules/contrib/php/php.module:35:    $libraries['drupal.block']['dependencies'][] = 'php/php.block.admin';
modules/contrib/social_login/social_login.info.yml:8:libraries:
modules/social_api/README.txt:42:  However, other libraries and authentication protocols can still be used.
vendor/stack/builder/composer.lock:47:            "description": "Common interface for logging libraries",
vendor/dompdf/dompdf/LICENSE.LGPL:21:specially designated software packages--typically libraries--of the
vendor/dompdf/dompdf/LICENSE.LGPL:66:  Most GNU software, including some libraries, is covered by the
vendor/dompdf/dompdf/LICENSE.LGPL:68:General Public License, applies to certain designated libraries, and
vendor/dompdf/dompdf/LICENSE.LGPL:70:this license for certain libraries in order to permit linking those
vendor/dompdf/dompdf/LICENSE.LGPL:71:libraries into non-free programs.
vendor/dompdf/dompdf/LICENSE.LGPL:86:libraries.  However, the Lesser license provides advantages in certain
vendor/dompdf/dompdf/LICENSE.LGPL:93:library does the same job as widely used non-free libraries.  In this
vendor/dompdf/dompdf/LICENSE.LGPL:328:restrictions of other proprietary libraries that do not normally
vendor/dompdf/dompdf/README.md:45: * No dependencies on external PDF libraries, thanks to the R&OS PDF class
vendor/dompdf/dompdf/README.md:112:Use the packaged release autoloader to load dompdf, libraries,
vendor/dompdf/dompdf/README.md:139:Require dompdf, libraries, and helper functions in your PHP:
vendor/zendframework/zend-stdlib/CHANGELOG.md:309:    their code will not work with existing libraries that are still type-hinting
vendor/wikimedia/composer-merge-plugin/README.md:12:install additional Composer managed libraries. It does this by allowing the
vendor/wikimedia/composer-merge-plugin/README.md:16:combined configuration will then be used when downloading additional libraries
vendor/wikimedia/composer-merge-plugin/README.md:20:which has core library requirements as well as optional libraries and
vendor/monolog/monolog/README.md:12:interface that you can type-hint against in your own libraries to keep
vendor/monolog/monolog/README.md:68:- Frameworks and libraries using [PSR-3](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md)
vendor/psr/cache/composer.json:3:    "description": "Common interface for caching libraries",
vendor/psr/log/composer.json:3:    "description": "Common interface for logging libraries",
vendor/composer/installers/src/Composer/Installers/LaravelInstaller.php:7:        'library' => 'libraries/{$name}/',
vendor/composer/installers/src/Composer/Installers/ImageCMSInstaller.php:9:        'library'     => 'application/libraries/{$name}/',
vendor/composer/installers/src/Composer/Installers/JoomlaInstaller.php:11:        'library'      => 'libraries/{$name}/',
vendor/composer/installers/src/Composer/Installers/CodeIgniterInstaller.php:7:        'library'     => 'application/libraries/{$name}/',
vendor/composer/installers/src/Composer/Installers/DrupalInstaller.php:10:        'library'   => 'libraries/{$name}/',
vendor/composer/installers/src/Composer/Installers/LithiumInstaller.php:7:        'library' => 'libraries/{$name}/',
vendor/composer/installers/src/Composer/Installers/LithiumInstaller.php:8:        'source'  => 'libraries/_source/{$name}/',
vendor/composer/installers/src/Composer/Installers/PhiftyInstaller.php:8:        'library' => 'libraries/{$name}/',
vendor/composer/installed.json:3418:        "description": "Common interface for caching libraries",
vendor/composer/installed.json:3569:        "description": "Common interface for logging libraries",
vendor/guzzlehttp/promises/README.md:483:Some promise libraries implement promises using a deferred object to represent
vendor/guzzlehttp/guzzle/README.md:16:  to utilize other PSR-7 compatible libraries with Guzzle.
vendor/solarium/solarium/docs/getting-started.md:20:First of all, if you're not familiar with Composer take a look here: [<http://getcomposer.org>](http://getcomposer.org). Composer is quickly becoming the standard for handling dependencies in PHP apps and many libraries support it. As of version 3 Solarium depends on an external library, the Symfony Event Dispatcher component. Composer automatically manages this dependency.
vendor/solarium/solarium/README.md:6:Solarium is a PHP Solr client library that accurately model Solr concepts. Where many other Solr libraries only handle
vendor/doctrine/common/docs/en/reference/class-loading.rst:8:to understand what is going on when using multiple libraries and/or
vendor/easyrdf/easyrdf/README.md:60:* No required external dependancies upon other libraries (PEAR, Zend, etc...)
vendor/fabpot/goutte/README.rst:110:Goutte is a thin wrapper around the following fine PHP libraries:
vendor/phenx/php-font-lib/LICENSE:21:specially designated software packages--typically libraries--of the
vendor/phenx/php-font-lib/LICENSE:66:  Most GNU software, including some libraries, is covered by the
vendor/phenx/php-font-lib/LICENSE:68:General Public License, applies to certain designated libraries, and
vendor/phenx/php-font-lib/LICENSE:70:this license for certain libraries in order to permit linking those
vendor/phenx/php-font-lib/LICENSE:71:libraries into non-free programs.
vendor/phenx/php-font-lib/LICENSE:86:libraries.  However, the Lesser license provides advantages in certain
vendor/phenx/php-font-lib/LICENSE:93:library does the same job as widely used non-free libraries.  In this
vendor/phenx/php-font-lib/LICENSE:328:restrictions of other proprietary libraries that do not normally
vendor/phenx/php-svg-lib/COPYING.GPL:142:the work, and the source code for shared libraries and dynamically
vendor/phpseclib/phpseclib/phpseclib/File/ASN1.php:791:     * DER-encodes an ASN.1 semantic mapping ($mapping).  Some libraries would probably call this function
vendor/symfony/http-foundation/Request.php:804:     * This method is mainly useful for libraries that want to provide some flexibility. If you don't need the
vendor/google/apiclient-services/src/Google/Service/Appengine/Version.php:49:  protected $librariesType = 'Google_Service_Appengine_Library';
vendor/google/apiclient-services/src/Google/Service/Appengine/Version.php:50:  protected $librariesDataType = 'array';
vendor/google/apiclient-services/src/Google/Service/Appengine/Version.php:281:  public function setLibraries($libraries)
vendor/google/apiclient-services/src/Google/Service/Appengine/Version.php:283:    $this->libraries = $libraries;
vendor/google/apiclient-services/src/Google/Service/Appengine/Version.php:290:    return $this->libraries;
vendor/google/apiclient-services/src/Google/Service/AndroidPublisher/Resource/EditsBundles.php:45:   * API client libraries, please increase the timeout of the http request before
vendor/google/apiclient-services/src/Google/Service/Logging/Resource/Entries.php:45:   * Logging agent (fluentd) and all logging libraries configured to use Logging.
vendor/google/apiclient/README.md:7:These client libraries are officially supported by Google.  However, the libraries are considered complete and are in maintenance mode. This means that we will address critical bugs and security issues but will not add any new features.
core/core.libraries.yml:1:# All libraries are defined in alphabetical order.
core/core.libraries.yml:88:      libraries: null
core/assets/vendor/jquery/jquery.js:658:		// For use in libraries implementing .is()
core/assets/vendor/jquery/jquery.js:10208:// Note that for maximum portability, libraries that are not jQuery should
core/assets/vendor/jquery/jquery.js:10211:// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
core/assets/vendor/ckeditor/LICENSE.md:38:The following libraries are included in CKEditor under the MIT license (see Appendix D):
core/assets/vendor/ckeditor/LICENSE.md:44:Parts of code taken from the following libraries are included in CKEditor under the MIT license (see Appendix D):
core/assets/vendor/ckeditor/LICENSE.md:48:The following libraries are included in CKEditor under the SIL Open Font License, Version 1.1 (see Appendix E):
core/assets/vendor/ckeditor/LICENSE.md:52:The following libraries are included in CKEditor under the BSD-3 License (see Appendix F):
core/assets/vendor/ckeditor/LICENSE.md:377:specially designated software packages-typically libraries-of the
core/assets/vendor/ckeditor/LICENSE.md:422:  Most GNU software, including some libraries, is covered by the
core/assets/vendor/ckeditor/LICENSE.md:424:General Public License, applies to certain designated libraries, and
core/assets/vendor/ckeditor/LICENSE.md:426:this license for certain libraries in order to permit linking those
core/assets/vendor/ckeditor/LICENSE.md:427:libraries into non-free programs.
core/assets/vendor/ckeditor/LICENSE.md:442:libraries.  However, the Lesser license provides advantages in certain
core/assets/vendor/ckeditor/LICENSE.md:449:library does the same job as widely used non-free libraries.  In this
core/assets/vendor/ckeditor/LICENSE.md:684:restrictions of other proprietary libraries that do not normally
core/lib/Drupal/Component/README.txt:1:Drupal Components are independent libraries that do not depend on the rest of
core/lib/Drupal/Component/README.txt:4:Components MAY depend on other Drupal Components or external libraries/packages,
core/lib/Drupal/Core/Template/TwigExtension.php:368:   * Allows Twig templates to attach asset libraries using
core/lib/Drupal/Core/Asset/LibraryDiscoveryInterface.php:6: * Discovers information for asset (CSS/JavaScript) libraries.
core/lib/Drupal/Core/Asset/LibraryDiscoveryInterface.php:16: *   without conflicts in case the libraries are loaded on certain pages only.
core/lib/Drupal/Core/Asset/LibraryDiscoveryInterface.php:21:   * Gets all libraries defined by an extension.
core/lib/Drupal/Core/Asset/LibraryDiscoveryInterface.php:27:   *   An associative array of libraries registered by $extension is returned
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:6: * Resolves the dependencies of asset (CSS/JavaScript) libraries.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:11:   * Gets the given libraries with their dependencies.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:16:   * @param string[] $libraries
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:17:   *   A list of libraries, in the order they should be loaded.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:20:   *   A list of libraries, in the order they should be loaded, including their
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:23:  public function getLibrariesWithDependencies(array $libraries);
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:26:   * Gets the minimal representative subset of the given libraries.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:29:   * libraries that is a dependency of another library in the set, is removed.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:32:   * possible of a set of libraries.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:35:   * Hence the given list of libraries represent a forest. This function returns
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:38:   * @param string[] $libraries
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:39:   *   A set of libraries.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:42:   *   A representative subset of the given set of libraries.
core/lib/Drupal/Core/Asset/LibraryDependencyResolverInterface.php:44:  public function getMinimalRepresentativeSubset(array $libraries);
core/lib/Drupal/Core/Asset/AssetResolverInterface.php:6: * Resolves asset libraries into concrete CSS and JavaScript assets.
core/lib/Drupal/Core/Asset/AssetResolverInterface.php:9: * the asset resolver can resolve those asset libraries into a list of concrete
core/lib/Drupal/Core/Asset/AssetResolverInterface.php:13: * abstraction (asset libraries) into concrete assets.
core/lib/Drupal/Core/Asset/AssetResolverInterface.php:21:   * Returns the CSS assets for the current response's libraries.
core/lib/Drupal/Core/Asset/AssetResolverInterface.php:53:   * Returns the JavaScript assets for the current response's libraries.
core/lib/Drupal/Core/Asset/Exception/InvalidLibrariesExtendSpecificationException.php:6: * Defines a custom exception for an invalid libraries-extend specification.
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:6: * Resolves the dependencies of asset (CSS/JavaScript) libraries.
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:30:  public function getLibrariesWithDependencies(array $libraries) {
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:31:    return $this->doGetDependencies($libraries);
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:35:   * Gets the given libraries with its dependencies.
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:39:   * @param string[] $libraries_with_unresolved_dependencies
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:40:   *   A list of libraries, with unresolved dependencies, in the order they
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:42:   * @param string[] $final_libraries
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:43:   *   The final list of libraries (the return value) that is being built
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:47:   *   A list of libraries, in the order they should be loaded, including their
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:50:  protected function doGetDependencies(array $libraries_with_unresolved_dependencies, array $final_libraries = []) {
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:51:    foreach ($libraries_with_unresolved_dependencies as $library) {
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:52:      if (!in_array($library, $final_libraries)) {
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:56:          $final_libraries = $this->doGetDependencies($definition['dependencies'], $final_libraries);
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:58:        $final_libraries[] = $library;
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:61:    return $final_libraries;
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:67:  public function getMinimalRepresentativeSubset(array $libraries) {
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:72:    foreach ($libraries as $library) {
core/lib/Drupal/Core/Asset/LibraryDependencyResolver.php:76:    foreach ($libraries as $library) {
core/lib/Drupal/Core/Asset/AttachedAssets.php:11:   * The (ordered) list of asset libraries attached to the current response.
core/lib/Drupal/Core/Asset/AttachedAssets.php:15:  public $libraries = [];
core/lib/Drupal/Core/Asset/AttachedAssets.php:25:   * The set of asset libraries that the client has already loaded.
core/lib/Drupal/Core/Asset/AttachedAssets.php:52:  public function setLibraries(array $libraries) {
core/lib/Drupal/Core/Asset/AttachedAssets.php:53:    $this->libraries = array_unique($libraries);
core/lib/Drupal/Core/Asset/AttachedAssets.php:61:    return $this->libraries;
core/lib/Drupal/Core/Asset/AttachedAssets.php:89:  public function setAlreadyLoadedLibraries(array $libraries) {
core/lib/Drupal/Core/Asset/AttachedAssets.php:90:    $this->alreadyLoadedLibraries = $libraries;
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:9: * - an ordered list of asset libraries (to be loaded for the current response)
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:11: * - a set of asset libraries that the client already has loaded (as indicated
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:31:   * Sets the asset libraries attached to the current response.
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:33:   * @param string[] $libraries
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:34:   *   A list of libraries, in the order they should be loaded.
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:38:  public function setLibraries(array $libraries);
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:41:   * Returns the asset libraries attached to the current response.
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:65:   * Sets the asset libraries that the current request marked as already loaded.
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:67:   * @param string[] $libraries
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:68:   *   The set of already loaded libraries.
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:72:  public function setAlreadyLoadedLibraries(array $libraries);
core/lib/Drupal/Core/Asset/AttachedAssetsInterface.php:75:   * Returns the set of already loaded asset libraries.
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:75:   * This also implements libraries-overrides for entire libraries that have
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:87:    $libraries = $this->discoveryParser->buildByExtension($extension);
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:88:    foreach ($libraries as $name => $definition) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:89:      // Handle libraries that are marked for override or removal.
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:94:          unset($libraries[$name]);
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:102:            $libraries[$name] = $replacement_definition[$replacement_name];
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:110:        // If libraries are not overridden, then apply libraries-extend.
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:111:        $libraries[$name] = $this->applyLibrariesExtend($extension, $name, $definition);
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:114:    return $libraries;
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:118:   * Applies the libraries-extend specified by the active theme.
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:121:   * libraries-extend specifications for the active theme.
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:131:   *   The library definition extended as specified by libraries-extend.
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:136:    $libraries_extend = $this->themeManager->getActiveTheme()->getLibrariesExtend();
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:137:    if (!empty($libraries_extend["$extension/$library_name"])) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:138:      foreach ($libraries_extend["$extension/$library_name"] as $library_extend_name) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:141:          throw new InvalidLibrariesExtendSpecificationException('The libraries-extend specification for each library must be a list of strings.');
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:144:        $new_libraries = $this->get($new_extension);
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:145:        if (isset($new_libraries[$new_library_name])) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryCollector.php:146:          $library_definition = NestedArray::mergeDeep($library_definition, $new_libraries[$new_library_name]);
core/lib/Drupal/Core/Asset/AssetResolver.php:85:   * Returns the libraries that need to be loaded.
core/lib/Drupal/Core/Asset/AssetResolver.php:99:   *   A list of libraries and their dependencies, in the order they should be
core/lib/Drupal/Core/Asset/AssetResolver.php:100:   *   loaded, excluding any libraries that have already been loaded.
core/lib/Drupal/Core/Asset/AssetResolver.php:116:    $libraries_to_load = $this->getLibrariesToLoad($assets);
core/lib/Drupal/Core/Asset/AssetResolver.php:117:    $cid = 'css:' . $theme_info->getName() . ':' . Crypt::hashBase64(serialize($libraries_to_load)) . (int) $optimize;
core/lib/Drupal/Core/Asset/AssetResolver.php:132:    foreach ($libraries_to_load as $library) {
core/lib/Drupal/Core/Asset/AssetResolver.php:184:   * Returns the JavaScript settings assets for this response's libraries.
core/lib/Drupal/Core/Asset/AssetResolver.php:186:   * Gathers all drupalSettings from all libraries in the attached assets
core/lib/Drupal/Core/Asset/AssetResolver.php:216:    $libraries_to_load = $this->getLibrariesToLoad($assets);
core/lib/Drupal/Core/Asset/AssetResolver.php:217:    $cid = 'js:' . $theme_info->getName() . ':' . $this->languageManager->getCurrentLanguage()->getId() . ':' . Crypt::hashBase64(serialize($libraries_to_load)) . (int) (count($assets->getSettings()) > 0) . (int) $optimize;
core/lib/Drupal/Core/Asset/AssetResolver.php:235:      // Collect all libraries that contain JS assets and are in the header.
core/lib/Drupal/Core/Asset/AssetResolver.php:236:      $header_js_libraries = [];
core/lib/Drupal/Core/Asset/AssetResolver.php:237:      foreach ($libraries_to_load as $library) {
core/lib/Drupal/Core/Asset/AssetResolver.php:241:          $header_js_libraries[] = $library;
core/lib/Drupal/Core/Asset/AssetResolver.php:244:      // The current list of header JS libraries are only those libraries that
core/lib/Drupal/Core/Asset/AssetResolver.php:247:      $header_js_libraries = $this->libraryDependencyResolver->getLibrariesWithDependencies($header_js_libraries);
core/lib/Drupal/Core/Asset/AssetResolver.php:249:      foreach ($libraries_to_load as $library) {
core/lib/Drupal/Core/Asset/AssetResolver.php:256:            // 'scope' is a calculated option, based on which libraries are
core/lib/Drupal/Core/Asset/AssetResolver.php:258:            $options['scope'] = in_array($library, $header_js_libraries) ? 'header' : 'footer';
core/lib/Drupal/Core/Asset/AssetResolver.php:303:      $libraries_to_load = $this->getLibrariesToLoad($assets);
core/lib/Drupal/Core/Asset/AssetResolver.php:304:      $settings_required = in_array('core/drupalSettings', $libraries_to_load) || in_array('core/drupalSettings', $this->libraryDependencyResolver->getLibrariesWithDependencies($assets->getAlreadyLoadedLibraries()));
core/lib/Drupal/Core/Asset/AssetResolver.php:305:      $settings_have_changed = count($libraries_to_load) > 0 || count($assets->getSettings()) > 0;
core/lib/Drupal/Core/Asset/AssetResolver.php:319:      $settings_in_header = in_array('core/drupalSettings', $header_js_libraries);
core/lib/Drupal/Core/Asset/LibraryDiscovery.php:8: * Discovers available asset libraries in Drupal.
core/lib/Drupal/Core/Asset/LibraryDiscovery.php:44:      $libraries = $this->collector->get($extension);
core/lib/Drupal/Core/Asset/LibraryDiscovery.php:46:      foreach ($libraries as $name => $definition) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:58:   * Parses and builds up all the libraries information of an extension.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:72:    $libraries = [];
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:88:    $libraries = $this->parseLibraryInfo($extension, $path);
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:89:    $libraries = $this->applyLibrariesOverride($libraries, $extension);
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:91:    foreach ($libraries as $id => &$library) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:117:      // Assign Drupal's license to libraries that don't have license info.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:129:        //   properly resolve dependencies for all (css) libraries per category,
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:193:            // libraries-override is used.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:222:    return $libraries;
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:230:   * Library information is parsed from *.libraries.yml files; see
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:268:   * - dependencies: A list of libraries this library depends on.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:300:    $libraries = [];
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:302:    $library_file = $path . '/' . $extension . '.libraries.yml';
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:305:        $libraries = Yaml::decode(file_get_contents($this->root . '/' . $library_file));
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:316:      $libraries = NestedArray::mergeDeep($libraries, $this->moduleHandler->invoke($extension, $hook));
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:319:    // Allow modules to alter the module's registered libraries.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:320:    $this->moduleHandler->alter('library_info', $libraries, $extension);
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:321:    $this->themeManager->alter('library_info', $libraries, $extension);
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:323:    return $libraries;
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:327:   * Apply libraries overrides specified for the current active theme.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:329:   * @param array $libraries
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:330:   *   The libraries definitions.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:332:   *   The extension in which these libraries are defined.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:335:   *   The modified libraries definitions.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:337:  protected function applyLibrariesOverride($libraries, $extension) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:339:    // ActiveTheme::getLibrariesOverride() returns libraries-overrides for the
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:341:    $all_libraries_overrides = $active_theme->getLibrariesOverride();
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:342:    foreach ($all_libraries_overrides as $theme_path => $libraries_overrides) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:343:      foreach ($libraries as $library_name => $library) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:344:        // Process libraries overrides.
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:345:        if (isset($libraries_overrides["$extension/$library_name"])) {
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:347:          $override_definition = $libraries_overrides["$extension/$library_name"];
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:354:              $libraries[$library_name]['override'] = $override_definition;
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:357:              $libraries[$library_name]['override'] = FALSE;
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:370:                throw new InvalidLibrariesOverrideSpecificationException(sprintf('drupalSettings may not be overridden in libraries-override. Trying to override %s. Use hook_library_info_alter() instead.', "$extension/$library_name/$sub_key"));
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:375:                  $this->setOverrideValue($libraries[$library_name], [$sub_key, $category], $overrides, $theme_path);
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:379:                $this->setOverrideValue($libraries[$library_name], [$sub_key], $value, $theme_path);
core/lib/Drupal/Core/Asset/LibraryDiscoveryParser.php:387:    return $libraries;
core/lib/Drupal/Core/Theme/ThemeInitialization.php:179:    // Prepare libraries overrides from this theme and ancestor themes. This
core/lib/Drupal/Core/Theme/ThemeInitialization.php:182:    $values['libraries_override'] = [];
core/lib/Drupal/Core/Theme/ThemeInitialization.php:184:    // Get libraries overrides declared by base themes.
core/lib/Drupal/Core/Theme/ThemeInitialization.php:186:      if (!empty($base->info['libraries-override'])) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:187:        foreach ($base->info['libraries-override'] as $library => $override) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:188:          $values['libraries_override'][$base->getPath()][$library] = $override;
core/lib/Drupal/Core/Theme/ThemeInitialization.php:193:    // Add libraries overrides declared by this theme.
core/lib/Drupal/Core/Theme/ThemeInitialization.php:194:    if (!empty($theme->info['libraries-override'])) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:195:      foreach ($theme->info['libraries-override'] as $library => $override) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:196:        $values['libraries_override'][$theme->getPath()][$library] = $override;
core/lib/Drupal/Core/Theme/ThemeInitialization.php:200:    // Get libraries extensions declared by base themes.
core/lib/Drupal/Core/Theme/ThemeInitialization.php:202:      if (!empty($base->info['libraries-extend'])) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:203:        foreach ($base->info['libraries-extend'] as $library => $extend) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:204:          if (isset($values['libraries_extend'][$library])) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:205:            // Merge if libraries-extend has already been defined for this
core/lib/Drupal/Core/Theme/ThemeInitialization.php:207:            $values['libraries_extend'][$library] = array_merge($values['libraries_extend'][$library], $extend);
core/lib/Drupal/Core/Theme/ThemeInitialization.php:210:            $values['libraries_extend'][$library] = $extend;
core/lib/Drupal/Core/Theme/ThemeInitialization.php:215:    // Add libraries extensions declared by this theme.
core/lib/Drupal/Core/Theme/ThemeInitialization.php:216:    if (!empty($theme->info['libraries-extend'])) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:217:      foreach ($theme->info['libraries-extend'] as $library => $extend) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:218:        if (isset($values['libraries_extend'][$library])) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:219:          // Merge if libraries-extend has already been defined for this
core/lib/Drupal/Core/Theme/ThemeInitialization.php:221:          $values['libraries_extend'][$library] = array_merge($values['libraries_extend'][$library], $extend);
core/lib/Drupal/Core/Theme/ThemeInitialization.php:224:          $values['libraries_extend'][$library] = $extend;
core/lib/Drupal/Core/Theme/ThemeInitialization.php:229:    // Do basically the same as the above for libraries
core/lib/Drupal/Core/Theme/ThemeInitialization.php:230:    $values['libraries'] = [];
core/lib/Drupal/Core/Theme/ThemeInitialization.php:232:    // Grab libraries from base theme
core/lib/Drupal/Core/Theme/ThemeInitialization.php:234:      if (!empty($base->libraries)) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:235:        foreach ($base->libraries as $library) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:236:          $values['libraries'][] = $library;
core/lib/Drupal/Core/Theme/ThemeInitialization.php:241:    // Add libraries used by this theme.
core/lib/Drupal/Core/Theme/ThemeInitialization.php:242:    if (!empty($theme->libraries)) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:243:      foreach ($theme->libraries as $library) {
core/lib/Drupal/Core/Theme/ThemeInitialization.php:244:        $values['libraries'][] = $library;
core/lib/Drupal/Core/Theme/ActiveTheme.php:65:   * The libraries provided by the theme.
core/lib/Drupal/Core/Theme/ActiveTheme.php:69:  protected $libraries;
core/lib/Drupal/Core/Theme/ActiveTheme.php:79:   * The libraries or library assets overridden by the theme.
core/lib/Drupal/Core/Theme/ActiveTheme.php:83:  protected $librariesOverride;
core/lib/Drupal/Core/Theme/ActiveTheme.php:97:      'libraries' => [],
core/lib/Drupal/Core/Theme/ActiveTheme.php:101:      'libraries_override' => [],
core/lib/Drupal/Core/Theme/ActiveTheme.php:102:      'libraries_extend' => [],
core/lib/Drupal/Core/Theme/ActiveTheme.php:110:    $this->libraries = $values['libraries'];
core/lib/Drupal/Core/Theme/ActiveTheme.php:114:    $this->librariesOverride = $values['libraries_override'];
core/lib/Drupal/Core/Theme/ActiveTheme.php:115:    $this->librariesExtend = $values['libraries_extend'];
core/lib/Drupal/Core/Theme/ActiveTheme.php:166:   * Returns the libraries provided by the theme.
core/lib/Drupal/Core/Theme/ActiveTheme.php:171:    return $this->libraries;
core/lib/Drupal/Core/Theme/ActiveTheme.php:212:   * Returns the libraries or library assets overridden by the active theme.
core/lib/Drupal/Core/Theme/ActiveTheme.php:215:   *   The list of libraries overrides.
core/lib/Drupal/Core/Theme/ActiveTheme.php:218:    return $this->librariesOverride;
core/lib/Drupal/Core/Theme/ActiveTheme.php:222:   * Returns the libraries extended by the active theme.
core/lib/Drupal/Core/Theme/ActiveTheme.php:225:   *   The list of libraries-extend definitions.
core/lib/Drupal/Core/Theme/ActiveTheme.php:228:    return $this->librariesExtend;
core/lib/Drupal/Core/Extension/ThemeHandler.php:201:    if (!empty($theme->info['libraries'])) {
core/lib/Drupal/Core/Extension/ThemeHandler.php:202:      foreach ($theme->info['libraries'] as $library => $name) {
core/lib/Drupal/Core/Extension/ThemeHandler.php:203:        $theme->libraries[$library] = $name;
core/lib/Drupal/Core/Extension/ThemeHandler.php:280:      'libraries' => [],
core/lib/Drupal/Core/ImageToolkit/ImageToolkitInterface.php:16: * module authors from the need to support multiple image libraries, and it
core/lib/Drupal/Core/Render/theme.api.php:300: *   @see core.libraries.yml
core/lib/Drupal/Core/Render/theme.api.php:378: * @section sec_attached Attaching libraries in render arrays
core/lib/Drupal/Core/Render/theme.api.php:387: * The #attached property allows loading of asset libraries (which may contain
core/lib/Drupal/Core/Render/theme.api.php:390: * type => value pairs, where the type (most often 'library' — for libraries, or
core/lib/Drupal/Core/Render/theme.api.php:403: * information on how to define libraries.
core/lib/Drupal/Core/Render/theme.api.php:834: * libraries, which do not depend on any runtime information, should be declared
core/lib/Drupal/Core/Render/theme.api.php:835: * in a modulename.libraries.yml file instead.
core/lib/Drupal/Core/Render/theme.api.php:841: * @see core.libraries.yml
core/lib/Drupal/Core/Render/theme.api.php:845:  $libraries = [];
core/lib/Drupal/Core/Render/theme.api.php:847:  $libraries['mymodule.zombie'] = [
core/lib/Drupal/Core/Render/theme.api.php:853:    $libraries['mymodule.zombie'] += [
core/lib/Drupal/Core/Render/theme.api.php:865:    $libraries['mymodule.zombie'] += [
core/lib/Drupal/Core/Render/theme.api.php:883:    $libraries['mymodule.vampire'] = [
core/lib/Drupal/Core/Render/theme.api.php:897:  return $libraries;
core/lib/Drupal/Core/Render/theme.api.php:943: * Alter libraries provided by an extension.
core/lib/Drupal/Core/Render/theme.api.php:945: * Allows modules and themes to change libraries' definitions; mostly used to
core/lib/Drupal/Core/Render/theme.api.php:951: * @param array $libraries
core/lib/Drupal/Core/Render/theme.api.php:952: *   An associative array of libraries registered by $extension. Keyed by
core/lib/Drupal/Core/Render/theme.api.php:956: *   the libraries.
core/lib/Drupal/Core/Render/theme.api.php:960:function hook_library_info_alter(&$libraries, $extension) {
core/lib/Drupal/Core/Render/theme.api.php:962:  if ($extension == 'core' && isset($libraries['jquery.farbtastic'])) {
core/lib/Drupal/Core/Render/theme.api.php:964:    if (version_compare($libraries['jquery.farbtastic']['version'], '2.0', '<')) {
core/lib/Drupal/Core/Render/theme.api.php:966:      $libraries['jquery.farbtastic']['version'] = '2.0';
core/lib/Drupal/Core/Render/theme.api.php:978:      foreach ($libraries['jquery.farbtastic']['js'] as $source => $options) {
core/lib/Drupal/Core/Render/theme.api.php:986:      $libraries['jquery.farbtastic']['js'] = $new_js;
core/lib/Drupal/Core/Render/HtmlResponseAttachmentsProcessor.php:160:      $assets->setAlreadyLoadedLibraries(isset($ajax_page_state) ? explode(',', $ajax_page_state['libraries']) : []);
core/lib/Drupal/Core/Render/HtmlResponseAttachmentsProcessor.php:162:      // $variables now contains the markup to load the asset libraries. Update
core/lib/Drupal/Core/Render/HtmlResponseAttachmentsProcessor.php:163:      // $attached with the final list of libraries and JavaScript settings, so
core/lib/Drupal/Core/Render/HtmlResponseAttachmentsProcessor.php:271:   * Processes asset libraries into render arrays.
core/lib/Drupal/Core/Render/HtmlResponse.php:16: * Supports Drupal's idea of #attached metadata: libraries, settings, http_header and html_head.
core/lib/Drupal/Core/Render/Element/RenderElement.php:49: *   See the "Attaching libraries in render arrays" section of the
core/lib/Drupal/Core/Render/AttachmentsResponseProcessorInterface.php:34:   * - 'library' (asset libraries)
core/lib/Drupal/Core/Render/AttachmentsInterface.php:8: * @todo If in Drupal 9, we remove attachments other than assets (libraries +
core/lib/Drupal/Core/Render/RendererInterface.php:223:   *   - If this element has #attached defined then any required libraries,
core/lib/Drupal/Core/Ajax/AjaxResponseAttachmentsProcessor.php:139:    // Resolve the attached libraries into asset collections.
core/lib/Drupal/Core/Ajax/AjaxResponseAttachmentsProcessor.php:142:      ->setAlreadyLoadedLibraries(isset($ajax_page_state['libraries']) ? explode(',', $ajax_page_state['libraries']) : [])
core/lib/Drupal/Core/Ajax/AjaxResponseAttachmentsProcessor.php:147:    // First, AttachedAssets::setLibraries() ensures duplicate libraries are
core/lib/Drupal/Core/Ajax/AjaxResponseAttachmentsProcessor.php:148:    // removed: it converts it to a set of libraries if necessary. Second,
core/themes/classy/classy.info.yml:9:libraries:
core/themes/classy/classy.info.yml:14:libraries-extend:
core/themes/bartik/bartik.info.yml:21:libraries:
core/themes/stable/stable.info.yml:10:libraries-override:
core/themes/seven/seven.info.yml:22:libraries:
core/themes/seven/seven.info.yml:24:libraries-override:
core/themes/seven/seven.info.yml:45:libraries-extend:
core/modules/quickedit/src/Tests/QuickEditLoadingTest.php:165:    $libraries = explode(',', $settings['ajaxPageState']['libraries']);
core/modules/quickedit/src/Tests/QuickEditLoadingTest.php:166:    $this->assertTrue(in_array('quickedit/quickedit', $libraries), 'Quick Edit library loaded.');
core/modules/quickedit/src/Tests/QuickEditLoadingTest.php:167:    $this->assertFalse(in_array('quickedit/quickedit.inPlaceEditor.form', $libraries), "'form' in-place editor not loaded.");
core/modules/quickedit/src/Tests/QuickEditLoadingTest.php:207:    // Second command: insert libraries into DOM.
core/modules/quickedit/src/Tests/QuickEditLoadingTest.php:209:    $this->assertTrue(in_array('quickedit/quickedit.inPlaceEditor.form', explode(',', $ajax_commands[0]['settings']['ajaxPageState']['libraries'])), 'The quickedit.inPlaceEditor.form library is loaded.');
core/modules/quickedit/quickedit.module:75:function quickedit_library_info_alter(&$libraries, $extension) {
core/modules/quickedit/quickedit.module:76:  if ($extension === 'quickedit' && isset($libraries['quickedit'])) {
core/modules/quickedit/quickedit.module:95:    $alter_library($libraries['quickedit'], $theme);
core/modules/migrate_drupal/tests/fixtures/drupal6.php:19207:  'source' => 'Your server is capable of displaying file upload progress, but does not have the required libraries. It is recommended to install the <a href="http://pecl.php.net/package/uploadprogress">PECL uploadprogress library</a> (preferred) or to install <a href="http://us2.php.net/apc">APC</a>.',
core/modules/system/system.module:599:  // Attach libraries used by this theme.
core/modules/system/system.module:693:  //   Response in which we must send the list of extra asset libraries that are
core/modules/system/system.module:754:  // before doing so. Also add the loaded libraries to ajaxPageState.
core/modules/system/system.module:768:    // Provide the page with information about the individual asset libraries
core/modules/system/system.module:770:    $minimal_libraries = $library_dependency_resolver->getMinimalRepresentativeSubset(array_merge(
core/modules/system/system.module:774:    sort($minimal_libraries);
core/modules/system/system.module:775:    $settings['ajaxPageState']['libraries'] = implode(',', $minimal_libraries);
core/modules/system/system.install:836:  $libraries = [
core/modules/system/system.install:851:    'value' => $libraries[$library],
core/modules/system/src/Tests/Theme/EngineTwigTest.php:133:   * Tests the attach of asset libraries.
core/modules/system/src/Tests/Ajax/DialogTest.php:148:    $this->assertTrue(in_array('core/drupal.dialog.ajax', explode(',', $ajax_result[0]['settings']['ajaxPageState']['libraries'])), 'core/drupal.dialog.ajax library is added to the page.');
core/modules/system/src/Tests/Ajax/FrameworkTest.php:108:    $original_libraries = explode(',', $original_settings['ajaxPageState']['libraries']);
core/modules/system/src/Tests/Ajax/FrameworkTest.php:113:    $this->assertTrue(!in_array($expected['library_1'], $original_libraries), format_string('Page originally lacks the %library library, as expected.', ['%library' => $expected['library_1']]));
core/modules/system/src/Tests/Ajax/FrameworkTest.php:114:    $this->assertTrue(!in_array($expected['library_2'], $original_libraries), format_string('Page originally lacks the %library library, as expected.', ['%library' => $expected['library_2']]));
core/modules/system/src/Tests/Ajax/FrameworkTest.php:119:      ->setAlreadyLoadedLibraries($original_libraries);
core/modules/system/src/Tests/Ajax/FrameworkTest.php:124:      ->setAlreadyLoadedLibraries($original_libraries);
core/modules/system/src/Tests/Ajax/FrameworkTest.php:133:    $new_libraries = explode(',', $new_settings['ajaxPageState']['libraries']);
core/modules/system/src/Tests/Ajax/FrameworkTest.php:137:    $this->assertTrue(!in_array($expected['library_1'], $new_libraries), format_string('Page still lacks the %library library, as expected.', ['%library' => $expected['library_1']]));
core/modules/system/src/Tests/Ajax/FrameworkTest.php:138:    $this->assertTrue(!in_array($expected['library_2'], $new_libraries), format_string('Page still lacks the %library library, as expected.', ['%library' => $expected['library_2']]));
core/modules/system/src/Tests/Ajax/FrameworkTest.php:151:    $this->assertFalse($found_settings_command, format_string('Page state still lacks the %library_1 and %library_2 libraries, as expected.', ['%library_1' => $expected['library_1'], '%library_2' => $expected['library_2']]));
core/modules/system/src/Tests/Ajax/FrameworkTest.php:152:    $this->assertFalse($found_markup_command, format_string('Page still lacks the %library_1 and %library_2 libraries, as expected.', ['%library_1' => $expected['library_1'], '%library_2' => $expected['library_2']]));
core/modules/system/src/Tests/Ajax/FrameworkTest.php:157:    $new_libraries = explode(',', $new_settings['ajaxPageState']['libraries']);
core/modules/system/src/Tests/Ajax/FrameworkTest.php:167:    $this->assertTrue(in_array($expected['library_1'], $new_libraries), format_string('Page state now has the %library library.', ['%library' => $expected['library_1']]));
core/modules/system/src/Tests/Ajax/FrameworkTest.php:176:    $this->assertTrue(in_array($expected['library_2'], $new_libraries), format_string('Page state now has the %library library.', ['%library' => $expected['library_2']]));
core/modules/system/src/Plugin/ImageToolkit/GDToolkit.php:376:      $requirements['version']['description'] = t('The GD Library for PHP is enabled, but was compiled without support for functions used by the rotate and desaturate effects. It was probably compiled using the official GD libraries from http://www.libgd.org instead of the GD library bundled with PHP. You should recompile PHP --with-gd using the bundled GD library. See <a href="http://php.net/manual/book.image.php">the PHP manual</a>.');
core/modules/system/tests/themes/test_subtheme/test_subtheme.libraries.yml:7:      css/sub-libraries-extend.css: {}
core/modules/system/tests/themes/test_subtheme/test_subtheme.info.yml:7:libraries:
core/modules/system/tests/themes/test_subtheme/test_subtheme.info.yml:13:libraries-extend:
core/modules/system/tests/themes/test_basetheme/test_basetheme.info.yml:9:libraries:
core/modules/system/tests/themes/test_basetheme/test_basetheme.info.yml:13:libraries-override:
core/modules/system/tests/themes/test_basetheme/test_basetheme.info.yml:22:libraries-extend:
core/modules/system/tests/themes/test_basetheme/test_basetheme.libraries.yml:8:      css/base-libraries-extend.css: {}
core/modules/system/tests/themes/test_theme_libraries_override_with_invalid_asset/test_theme_libraries_override_with_invalid_asset.info.yml:1:name: 'Test theme libraries-override'
core/modules/system/tests/themes/test_theme_libraries_override_with_invalid_asset/test_theme_libraries_override_with_invalid_asset.info.yml:3:description: 'Theme with invalid libraries-override asset spec.'
core/modules/system/tests/themes/test_theme_libraries_override_with_invalid_asset/test_theme_libraries_override_with_invalid_asset.info.yml:7:libraries-override:
core/modules/system/tests/themes/test_theme_libraries_override_with_drupal_settings/test_theme_libraries_override_with_drupal_settings.info.yml:1:name: 'Test theme libraries-override'
core/modules/system/tests/themes/test_theme_libraries_override_with_drupal_settings/test_theme_libraries_override_with_drupal_settings.info.yml:3:description: 'Theme with drupalSettings libraries-override'
core/modules/system/tests/themes/test_theme_libraries_override_with_drupal_settings/test_theme_libraries_override_with_drupal_settings.info.yml:7:libraries-override:
core/modules/system/tests/themes/test_theme_libraries_override_with_drupal_settings/test_theme_libraries_override_with_drupal_settings.info.yml:8:  # drupalSettings libraries override. Should throw a
core/modules/system/tests/themes/test_theme/test_theme.info.yml:19:libraries:
core/modules/system/tests/themes/test_theme/test_theme.info.yml:21:libraries-override:
core/modules/system/tests/themes/test_theme/test_theme.theme:35:function test_theme_library_info_alter(&$libraries, $extension) {
core/modules/system/tests/themes/test_theme/test_theme.theme:37:    $libraries['kitten']['js']['kittens.js'] = [];
core/modules/system/tests/themes/test_theme_libraries_extend/test_theme_libraries_extend.info.yml:1:name: 'Test theme libraries-extend'
core/modules/system/tests/themes/test_theme_libraries_extend/test_theme_libraries_extend.info.yml:3:description: 'Test Theme with libraries-extend'
core/modules/system/tests/themes/test_theme_libraries_extend/test_theme_libraries_extend.info.yml:7:libraries-extend:
core/modules/system/tests/themes/test_theme_libraries_extend/test_theme_libraries_extend.info.yml:9:    - test_theme_libraries_extend/extend_one
core/modules/system/tests/themes/test_theme_libraries_extend/test_theme_libraries_extend.info.yml:10:    - test_theme_libraries_extend/extend_two
core/modules/system/tests/themes/test_theme_libraries_extend/test_theme_libraries_extend.info.yml:12:    - test_theme_libraries_extend/non_existent_library
core/modules/system/tests/themes/test_theme_libraries_empty/test_theme_libraries_empty.info.yml:1:name: 'Test theme libraries empty'
core/modules/system/tests/themes/test_theme_libraries_empty/test_theme_libraries_empty.info.yml:3:description: 'Test theme with empty libraries in theme.info.yml'
core/modules/system/tests/themes/test_theme_libraries_empty/test_theme_libraries_empty.info.yml:7:libraries:
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:34:    // Log in so there are more libraries to test with otherwise only html5shiv
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:40:   * Default functionality without the param ajax_page_state[libraries].
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:42:   * The libraries html5shiv and drupalSettings are loaded default from core
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:58:   * Give ajax_page_state[libraries]=core/html5shiv to exclude the library.
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:60:   * When called with ajax_page_state[libraries]=core/html5shiv the library
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:62:   * libraries so test if drupalSettings is still available.
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:70:              'libraries' => 'core/html5shiv'
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:87:   * Test if multiple libraries can be excluded.
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:89:   * The ajax_page_state[libraries] should be able to support multiple libraries
core/modules/system/tests/src/Functional/Render/AjaxPageStateTest.php:94:      ['query' => ['ajax_page_state' => ['libraries' => 'core/html5shiv,core/drupalSettings']]]
core/modules/system/tests/modules/common_test/common_test.module:173:  $libraries = [];
core/modules/system/tests/modules/common_test/common_test.module:175:    $libraries['dynamic_library'] = [
core/modules/system/tests/modules/common_test/common_test.module:184:  return $libraries;
core/modules/system/tests/modules/common_test/common_test.module:190:function common_test_library_info_alter(&$libraries, $module) {
core/modules/system/tests/modules/common_test/common_test.module:191:  if ($module == 'core' && isset($libraries['jquery.farbtastic'])) {
core/modules/system/tests/modules/common_test/common_test.module:193:    $libraries['jquery.farbtastic']['version'] = '0.0';
core/modules/system/tests/modules/common_test/common_test.module:195:    $libraries['jquery.farbtastic']['dependencies'][] = 'core/jquery.form';
core/modules/system/tests/modules/common_test/common_test.module:199:  if ($module == 'common_test' && isset($libraries['dynamic_library'])) {
core/modules/system/tests/modules/common_test/common_test.module:200:    $libraries['dynamic_library']['dependencies'] = [
core/modules/system/tests/modules/theme_test/theme_test.module:206:    $info += ['libraries' => []];
core/modules/system/tests/modules/theme_test/theme_test.module:207:    $info['libraries'][] = 'core/backbone';
core/modules/tracker/tests/src/Functional/TrackerTest.php:449:    $this->assertIdentical($library_is_present, isset($settings['ajaxPageState']) && in_array('tracker/history', explode(',', $settings['ajaxPageState']['libraries'])), 'drupal.tracker-history library is present.');
Binary file core/modules/content_moderation/tests/fixtures/update/drupal-8.4.0-content_moderation_installed.php matches
core/modules/views/tests/src/Kernel/Plugin/CacheTest.php:294:    $this->assertTrue(in_array('views_test_data/test', $output['#attached']['library']), 'Make sure libraries are added for cached views.');
core/modules/comment/tests/src/Functional/CommentEntityTest.php:76:    $this->assertFalse(isset($settings['ajaxPageState']['libraries']) && in_array('comment/drupal.comment-new-indicator', explode(',', $settings['ajaxPageState']['libraries'])), 'drupal.comment-new-indicator library is present.');
core/modules/comment/tests/src/Functional/CommentCSSTest.php:132:        $this->assertIdentical($expectedJS, isset($settings['ajaxPageState']['libraries']) && in_array('comment/drupal.comment-new-indicator', explode(',', $settings['ajaxPageState']['libraries'])), 'drupal.comment-new-indicator library is present.');
core/modules/editor/editor.info.yml:3:description: 'Provides a means to associate text formats with text editor libraries such as WYSIWYGs or toolbars.'
core/modules/editor/src/Plugin/EditorPluginInterface.php:57:   * Returns libraries to be attached.
core/modules/editor/src/Plugin/EditorPluginInterface.php:67:   *   An array of libraries that will be added to the page for use by this text
core/modules/editor/src/Plugin/EditorManager.php:51:   * Retrieves text editor libraries and JavaScript settings.
core/modules/editor/tests/src/Kernel/EditorImageDialogTest.php:102:        'libraries' => '',
core/modules/filter/src/Plugin/FilterInterface.php:40: * - declare asset libraries to be loaded;
core/modules/filter/src/FilterProcessResult.php:16: * - Declare asset libraries to be loaded.
core/modules/big_pipe/src/Render/BigPipe.php:77: *     libraries. And those we track in drupalSettings.ajaxPageState.libraries —
core/modules/big_pipe/src/Render/BigPipe.php:79: *     asset libraries again. A HTML page can have multiple AJAX responses, each
core/modules/big_pipe/src/Render/BigPipe.php:331:    // will render may attach additional asset libraries, and if so, it will be
core/modules/big_pipe/src/Render/BigPipe.php:338:    // If additional asset libraries or drupalSettings were attached by any of
core/modules/big_pipe/src/Render/BigPipe.php:360:      // Push a fake request with the asset libraries loaded so far and dispatch
core/modules/big_pipe/src/Render/BigPipe.php:464:      // Push a fake request with the asset libraries loaded so far and dispatch
core/modules/big_pipe/src/Render/BigPipe.php:471:      $fake_request->request->set('ajax_page_state', ['libraries' => implode(',', $cumulative_assets->getAlreadyLoadedLibraries())]);
core/modules/big_pipe/src/Render/BigPipe.php:489:      // libraries sent so far. Any new settings also need to be tracked, so
core/modules/big_pipe/src/Render/BigPipe.php:572:      // Push a fake request with the asset libraries loaded so far and dispatch
core/modules/big_pipe/src/Render/BigPipe.php:577:      //   libraries and updated AJAX page state are added to the AJAX response
core/modules/big_pipe/src/Render/BigPipe.php:579:      //   allows us to track the total set of asset libraries sent in the
core/modules/big_pipe/src/Render/BigPipe.php:581:      $fake_request->request->set('ajax_page_state', ['libraries' => implode(',', $cumulative_assets->getAlreadyLoadedLibraries())] + $cumulative_assets->getSettings()['ajaxPageState']);
core/modules/big_pipe/src/Render/BigPipe.php:605:      // libraries sent so far. Any new settings are already sent; we don't need
core/modules/big_pipe/src/Render/BigPipe.php:607:      if (isset($ajax_response->getAttachments()['drupalSettings']['ajaxPageState']['libraries'])) {
core/modules/big_pipe/src/Render/BigPipe.php:608:        $cumulative_assets->setAlreadyLoadedLibraries(explode(',', $ajax_response->getAttachments()['drupalSettings']['ajaxPageState']['libraries']));
core/modules/big_pipe/tests/src/Functional/BigPipeTest.php:184:    $this->assertTrue(in_array('big_pipe/big_pipe', explode(',', $this->getDrupalSettings()['ajaxPageState']['libraries'])), 'BigPipe asset library is present.');
core/modules/big_pipe/tests/src/Unit/Render/BigPipeResponseAttachmentsProcessorTest.php:89:      'libraries' => [['library' => ['core/drupal']]],
core/modules/big_pipe/tests/src/Unit/Render/BigPipeResponseAttachmentsProcessorTest.php:90:      'libraries + drupalSettings' => [['library' => ['core/drupal'], 'drupalSettings' => ['foo' => 'bar']]],
core/modules/simpletest/src/WebTestBase.php:1405:    if (isset($drupal_settings['ajaxPageState']['libraries'])) {
core/modules/simpletest/src/WebTestBase.php:1406:      $post['ajax_page_state[libraries]'] = $drupal_settings['ajaxPageState']['libraries'];
core/modules/color/color.module:73: * Replaces style sheets declared in libraries with color-altered style sheets.
core/modules/color/color.module:75:function color_library_info_alter(&$libraries, $extension) {
core/modules/color/color.module:80:      foreach (array_keys($libraries) as $name) {
core/modules/color/color.module:81:        if (isset($libraries[$name]['css'])) {
core/modules/color/color.module:83:          foreach ($libraries[$name]['css'] as $category => $css_assets) {
core/modules/color/color.module:93:                  $index = array_search($path, array_keys($libraries[$name]['css'][$category]));
core/modules/color/color.module:94:                  $preceding_css_assets = array_slice($libraries[$name]['css'][$category], 0, $index);
core/modules/color/color.module:95:                  $succeeding_css_assets = array_slice($libraries[$name]['css'][$category], $index + 1);
core/modules/color/color.module:96:                  $libraries[$name]['css'][$category] = array_merge(
core/modules/color/tests/modules/color_test/themes/color_test_theme/color_test_theme.info.yml:6:libraries:
core/modules/views_ui/src/Tests/PreviewTest.php:259:    $this->assertTrue(strpos($this->getDrupalSettings()['ajaxPageState']['libraries'], 'views_ui_test/views_ui_test.test') !== FALSE, 'Attached library found.');
core/modules/views_ui/tests/src/FunctionalJavascript/LibraryCachingTest.php:38:    // dialog libraries.
core/modules/views_ui/tests/src/FunctionalJavascript/LibraryCachingTest.php:43:    // Close the dialog and open it again. No no libraries will be loaded, but a
core/modules/views_ui/tests/src/FunctionalJavascript/LibraryCachingTest.php:44:    // cache entry will be made for not loading any libraries.
core/modules/views_ui/tests/src/FunctionalJavascript/LibraryCachingTest.php:54:    // Now use the 'Update preview' button to load libraries.
core/modules/views_ui/tests/src/FunctionalJavascript/LibraryCachingTest.php:56:    // The first click will load all the libraries.
core/modules/views_ui/tests/src/FunctionalJavascript/LibraryCachingTest.php:59:    // The second click will not load any new libraries.
core/modules/locale/locale.module:588:function locale_library_info_alter(array &$libraries, $module) {
core/modules/locale/locale.module:589:  if ($module === 'core' && isset($libraries['jquery.ui.datepicker'])) {
core/modules/locale/locale.module:590:    $libraries['jquery.ui.datepicker']['dependencies'][] = 'locale/drupal.locale.datepicker';
core/modules/locale/locale.module:591:    $libraries['jquery.ui.datepicker']['drupalSettings']['jquery']['ui']['datepicker'] = [
core/modules/locale/locale.module:602:  if ($module === 'core' && isset($libraries['drupal'])) {
core/modules/locale/locale.module:603:    $libraries['drupal']['dependencies'][] = 'locale/translations';
core/modules/locale/tests/src/Functional/LocaleLibraryAlterTest.php:9: * Tests localization of the JavaScript libraries.
core/modules/responsive_image/responsive_image.module:552:function responsive_image_library_info_alter(array &$libraries, $module) {
core/modules/responsive_image/responsive_image.module:553:  if ($module === 'core' && isset($libraries['drupal.ajax'])) {
core/modules/responsive_image/responsive_image.module:554:    $libraries['drupal.ajax']['dependencies'][] = 'responsive_image/ajax';
core/modules/file/file.install:103:      $description = t('Your server is capable of displaying file upload progress, but does not have the required libraries. It is recommended to install the <a href="http://pecl.php.net/package/uploadprogress">PECL uploadprogress library</a>.');
core/modules/history/tests/src/Functional/HistoryTest.php:129:    $libraries = explode(',', $settings['ajaxPageState']['libraries']);
core/modules/history/tests/src/Functional/HistoryTest.php:130:    $this->assertTrue(in_array('history/mark-as-read', $libraries), 'history/mark-as-read library is present.');
core/modules/ckeditor/ckeditor.module:109:function ckeditor_library_info_alter(&$libraries, $extension) {
core/modules/ckeditor/ckeditor.module:112:  if ($extension === 'ckeditor' && isset($libraries['drupal.ckeditor'])) {
core/modules/ckeditor/ckeditor.module:114:    $libraries['drupal.ckeditor']['drupalSettings']['ckeditor']['timestamp'] = $query_string;
core/modules/ckeditor/src/Plugin/Editor/CKEditor.php:366:    $libraries = [
core/modules/ckeditor/src/Plugin/Editor/CKEditor.php:370:    // Get the required libraries for any enabled plugins.
core/modules/ckeditor/src/Plugin/Editor/CKEditor.php:374:      $additional_libraries = array_diff($plugin->getLibraries($editor), $libraries);
core/modules/ckeditor/src/Plugin/Editor/CKEditor.php:375:      $libraries = array_merge($libraries, $additional_libraries);
core/modules/ckeditor/src/Plugin/Editor/CKEditor.php:378:    return $libraries;
core/modules/ckeditor/src/CKEditorPluginInterface.php:55:   * Returns a list of libraries this plugin requires.
core/modules/ckeditor/src/CKEditorPluginInterface.php:57:   * These libraries will be attached to the text_format element on which the
core/modules/ckeditor/src/CKEditorPluginInterface.php:63:   *   An array of libraries suitable for usage in a render API #attached
core/modules/ckeditor/tests/src/Functional/CKEditorLoadingTest.php:122:    $this->assertTrue(in_array('ckeditor/drupal.ckeditor', explode(',', $settings['ajaxPageState']['libraries'])), 'CKEditor glue library is present.');
core/modules/ckeditor/tests/src/Functional/CKEditorLoadingTest.php:151:    $this->assertTrue(in_array('ckeditor/drupal.ckeditor', explode(',', $settings['ajaxPageState']['libraries'])), 'CKEditor glue library is present.');
core/modules/ckeditor/tests/src/Functional/CKEditorLoadingTest.php:243:      isset($settings['ajaxPageState']['libraries']) && in_array('ckeditor/drupal.ckeditor', explode(',', $settings['ajaxPageState']['libraries'])),
core/profiles/demo_umami/themes/umami/umami.info.yml:7:libraries:
core/profiles/demo_umami/themes/umami/umami.info.yml:12:libraries-override:
core/includes/batch.inc:69:  // Add batch-specific libraries.
core/includes/unicode.inc:23:  $libraries = [
core/includes/unicode.inc:38:    'value' => $libraries[$library],
core/includes/common.inc:112: * The default group for JavaScript and jQuery libraries added to the page.
core/includes/form.inc:697: *   - library: An array of batch-specific CSS and JS libraries.
core/misc/ajax.js:342:    options.data['ajax_page_state[libraries]'] = pageState.libraries;
core/misc/drupal.init.es6.js:1:// Allow other JavaScript libraries to use $.
core/misc/drupal.init.es6.js:9:// JavaScript should be made compatible with libraries other than jQuery by
core/misc/ajax.es6.js:741:    options.data['ajax_page_state[libraries]'] = pageState.libraries;
core/misc/drupal.es6.js:43:// JavaScript should be made compatible with libraries other than jQuery by
core/tests/Drupal/Tests/Core/Asset/AssetResolverTest.php:141:      'same libraries, different timestamps' => [
core/tests/Drupal/Tests/Core/Asset/AssetResolverTest.php:146:      'different libraries, same timestamps' => [
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:92:    $libraries = $this->libraryDiscoveryParser->buildByExtension('example_module');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:93:    $library = $libraries['example'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:119:    $libraries = $this->libraryDiscoveryParser->buildByExtension('example_theme');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:120:    $library = $libraries['example'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:147:   * Tests that an exception is thrown when a libraries file couldn't be parsed.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:199:    $libraries = $this->libraryDiscoveryParser->buildByExtension('versions');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:201:    $this->assertFalse(array_key_exists('version', $libraries['versionless']));
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:202:    $this->assertEquals(-1, $libraries['versionless']['css'][0]['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:203:    $this->assertEquals(-1, $libraries['versionless']['js'][0]['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:205:    $this->assertEquals('9.8.7.6', $libraries['versioned']['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:206:    $this->assertEquals('9.8.7.6', $libraries['versioned']['css'][0]['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:207:    $this->assertEquals('9.8.7.6', $libraries['versioned']['js'][0]['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:209:    $this->assertEquals(\Drupal::VERSION, $libraries['core-versioned']['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:210:    $this->assertEquals(\Drupal::VERSION, $libraries['core-versioned']['css'][0]['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:211:    $this->assertEquals(\Drupal::VERSION, $libraries['core-versioned']['js'][0]['version']);
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:216:   * Tests that the version property of external libraries is handled.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:230:    $libraries = $this->libraryDiscoveryParser->buildByExtension('external');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:231:    $library = $libraries['example_external'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:253:    $libraries = $this->libraryDiscoveryParser->buildByExtension('css_weights');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:254:    $library = $libraries['example'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:277:   * Ensures that you cannot provide positive weights for JavaScript libraries.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:310:    $libraries = $this->libraryDiscoveryParser->buildByExtension('css_js_settings');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:311:    $library = $libraries['example'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:340:    $libraries = $this->libraryDiscoveryParser->buildByExtension('dependencies');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:341:    $library = $libraries['example'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:366:    $libraries = $this->libraryDiscoveryParser->buildByExtension('data_types');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:367:    $library = $libraries['example'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:395:    $libraries = $this->libraryDiscoveryParser->buildByExtension('js');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:396:    $library = $libraries['example'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:436:    $libraries = $this->libraryDiscoveryParser->buildByExtension('licenses');
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:438:    // For libraries without license info, the default license is applied.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:439:    $library = $libraries['no-license-info'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:450:    // GPL2-licensed libraries.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:451:    $library = $libraries['gpl2'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:461:    // MIT-licensed libraries.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:462:    $library = $libraries['mit'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:473:    $library = $libraries['public-domain'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:483:    // Apache-licensed libraries.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:484:    $library = $libraries['apache'];
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:494:    // Copyrighted libraries.
core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php:495:    $library = $libraries['copyright'];
core/tests/Drupal/Tests/Core/Asset/LibraryDependencyResolverTest.php:73:      // Empty list of libraries.
core/tests/Drupal/Tests/Core/Asset/LibraryDependencyResolverTest.php:116:  public function testGetLibrariesWithDependencies(array $libraries, array $expected) {
core/tests/Drupal/Tests/Core/Asset/LibraryDependencyResolverTest.php:117:    $this->assertEquals($expected, $this->libraryDependencyResolver->getLibrariesWithDependencies($libraries));
core/tests/Drupal/Tests/Core/Asset/LibraryDependencyResolverTest.php:125:      // Empty list of libraries.
core/tests/Drupal/Tests/Core/Asset/LibraryDependencyResolverTest.php:168:  public function testGetMinimalRepresentativeSubset(array $libraries, array $expected) {
core/tests/Drupal/Tests/Core/Asset/LibraryDependencyResolverTest.php:169:    $this->assertEquals($expected, $this->libraryDependencyResolver->getMinimalRepresentativeSubset($libraries));
core/tests/Drupal/Tests/Core/Theme/RegistryTest.php:110:      'libraries_override' => [],
core/tests/Drupal/Tests/Core/Theme/RegistryTest.php:111:      'libraries_extend' => [],
core/tests/Drupal/Tests/Core/Theme/RegistryTest.php:112:      'libraries' => [],
core/tests/Drupal/Tests/Core/Theme/RegistryTest.php:123:      'libraries_override' => [],
core/tests/Drupal/Tests/Core/Theme/RegistryTest.php:124:      'libraries_extend' => [],
core/tests/Drupal/Tests/Core/Theme/RegistryTest.php:125:      'libraries' => [],
core/tests/Drupal/Tests/Core/Extension/ThemeHandlerTest.php:139:    $this->assertEquals(['seven/global-styling'], $info->info['libraries']);
core/tests/Drupal/Tests/Core/Extension/ThemeHandlerTest.php:143:   * Tests empty libraries in theme.info.yml file.
core/tests/Drupal/Tests/Core/Extension/ThemeHandlerTest.php:146:    $theme = new Extension($this->root, 'theme', '/core/modules/system/tests/themes/test_theme_libraries_empty', 'test_theme_libraries_empty.info.yml');
core/tests/Drupal/Tests/Core/Extension/ThemeHandlerTest.php:149:      $this->assertTrue(TRUE, 'Empty libraries key in theme.info.yml does not cause PHP warning');
core/tests/Drupal/Tests/Core/Extension/ThemeHandlerTest.php:152:      $this->fail('Empty libraries key in theme.info.yml causes PHP warning.');
core/tests/Drupal/Tests/Core/Render/RendererBubblingTest.php:66:    $expected_libraries = ['test/parent', 'test/child', 'test/subchild'];
core/tests/Drupal/Tests/Core/Render/RendererBubblingTest.php:67:    $this->assertEquals($element['#attached']['library'], $expected_libraries, 'The element, child and subchild #attached libraries are included.');
core/tests/Drupal/Tests/Core/Render/RendererBubblingTest.php:73:    $this->assertEquals($element['#attached']['library'], $expected_libraries, 'The element, child and subchild #attached libraries are included.');
core/tests/Drupal/KernelTests/Core/Asset/AttachedAssetsTest.php:11: * Tests #attached assets: attached asset libraries and JavaScript settings.
core/tests/Drupal/KernelTests/Core/Asset/AttachedAssetsTest.php:67:   * Tests non-existing libraries.
core/tests/Drupal/KernelTests/Core/Asset/AttachedAssetsTest.php:415:    $this->assertEqual($library['version'], '0.0', 'Registered libraries were altered.');
core/tests/Drupal/KernelTests/Core/Asset/AttachedAssetsTest.php:449:   * Tests that multiple modules can implement libraries with the same name.
core/tests/Drupal/KernelTests/Core/Asset/AttachedAssetsTest.php:457:    $this->assertEqual($farbtastic['version'], '0.1', 'Alternative libraries can be added to the page.');
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:8: * Tests that the asset files for all core libraries exist.
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:11: * the libraries after theme-level libraries-override and libraries-extend are
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:70:   * A list of libraries to skip checking, in the format extension/library_name.
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:74:  protected $librariesToSkip = [
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:130:    // First verify all libraries with no active theme.
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:133:    // Then verify all libraries for each core theme. This may seem like
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:134:    // overkill but themes can override and extend other extensions' libraries
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:153:    foreach ($library_definitions as $extension => $libraries) {
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:154:      foreach ($libraries as $library_name => $library) {
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:155:        if (in_array("$extension/$library_name", $this->librariesToSkip)) {
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:176:   * Gets all libraries for core and all installed modules.
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:193:    $libraries['core'] = $this->libraryDiscovery->getLibrariesByExtension('core');
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:197:      $library_file = $extension->getPath() . '/' . $extension_name . '.libraries.yml';
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:199:        $libraries[$extension_name] = $this->libraryDiscovery->getLibrariesByExtension($extension_name);
core/tests/Drupal/KernelTests/Core/Asset/ResolvedLibraryDefinitionsFilesMatchTest.php:202:    return $libraries;
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:48:   * Tests that libraries-override are applied to library definitions.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:51:    // Assert some classy libraries that will be overridden or removed.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:62:    // Activate test theme that defines libraries overrides.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:94:   * Tests libraries-override on drupalSettings.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:98:    $this->activateTheme('test_theme_libraries_override_with_drupal_settings');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:106:      $expected_message = 'drupalSettings may not be overridden in libraries-override. Trying to override core/drupal.ajax/drupalSettings. Use hook_library_info_alter() instead.';
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:112:   * Tests libraries-override on malformed assets.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:116:    $this->activateTheme('test_theme_libraries_override_with_invalid_asset');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:133:    // Activate a test theme that defines libraries overrides on other types of
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:151:   * Tests that base theme libraries-override still apply in sub themes.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:157:    // Assert that libraries-override specified in the base theme still applies
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:164:   * Tests libraries-extend.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:167:    // Activate classy themes and verify the libraries are not extended.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:169:    $this->assertNoAssetInLibrary('core/modules/system/tests/themes/test_theme_libraries_extend/css/extend_1.css', 'classy', 'book-navigation', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:170:    $this->assertNoAssetInLibrary('core/modules/system/tests/themes/test_theme_libraries_extend/js/extend_1.js', 'classy', 'book-navigation', 'js');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:171:    $this->assertNoAssetInLibrary('core/modules/system/tests/themes/test_theme_libraries_extend/css/extend_2.css', 'classy', 'book-navigation', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:174:    $this->activateTheme('test_theme_libraries_extend');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:175:    $this->assertAssetInLibrary('core/modules/system/tests/themes/test_theme_libraries_extend/css/extend_1.css', 'classy', 'book-navigation', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:176:    $this->assertAssetInLibrary('core/modules/system/tests/themes/test_theme_libraries_extend/js/extend_1.js', 'classy', 'book-navigation', 'js');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:177:    $this->assertAssetInLibrary('core/modules/system/tests/themes/test_theme_libraries_extend/css/extend_2.css', 'classy', 'book-navigation', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:181:    $this->assertNoAssetInLibrary('core/modules/system/tests/themes/test_basetheme/css/base-libraries-extend.css', 'classy', 'base', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:182:    $this->assertNoAssetInLibrary('core/modules/system/tests/themes/test_subtheme/css/sub-libraries-extend.css', 'classy', 'base', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:184:    $this->assertAssetInLibrary('core/modules/system/tests/themes/test_basetheme/css/base-libraries-extend.css', 'classy', 'base', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:185:    $this->assertAssetInLibrary('core/modules/system/tests/themes/test_subtheme/css/sub-libraries-extend.css', 'classy', 'base', 'css');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:189:    $this->activateTheme('test_theme_libraries_extend');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:192:      $this->fail('Throw Exception when specifying non-existent libraries-extend.');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:195:      $expected_message = 'The specified library "test_theme_libraries_extend/non_existent_library" does not exist.';
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:196:      $this->assertEqual($e->getMessage(), $expected_message, 'Throw Exception when specifying non-existent libraries-extend.');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:199:    // Also, test non-string libraries-extend. An exception should be thrown.
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:203:      $this->fail('Throw Exception when specifying non-string libraries-extend.');
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:206:      $expected_message = 'The libraries-extend specification for each library must be a list of strings.';
core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php:207:      $this->assertEqual($e->getMessage(), $expected_message, 'Throw Exception when specifying non-string libraries-extend.');
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:43:   * A list of libraries to skip checking, in the format extension/library_name.
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:47:  protected $librariesToSkip = [];
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:87:    $libraries_before = $this->getAllLibraries();
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:88:    $libraries_before = $this->removeVendorAssets($libraries_before);
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:94:    $libraries_after = $this->getAllLibraries();
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:95:    $libraries_after = $this->removeVendorAssets($libraries_after);
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:98:    foreach ($libraries_before as $extension => $libraries) {
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:99:      foreach ($libraries as $library_name => $library) {
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:100:        // Allow skipping libraries.
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:101:        if (in_array("$extension/$library_name", $this->librariesToSkip)) {
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:104:        $library_after = $libraries_after[$extension][$library_name];
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:129:   * Removes all vendor libraries and assets from the library definitions.
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:131:   * @param array[] $all_libraries
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:132:   *   An associative array of libraries keyed by extension, then by library
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:136:   *   The reduced array of libraries.
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:138:  protected function removeVendorAssets($all_libraries) {
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:139:    foreach ($all_libraries as $extension => $libraries) {
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:140:      foreach ($libraries as $library_name => $library) {
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:142:          unset($all_libraries[$extension][$library_name]);
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:147:              unset($all_libraries[$extension][$library_name][$asset_type][$index]);
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:149:              // libraries-override doesn't always preserve the order.
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:150:              if (!empty($all_libraries[$extension][$library_name][$asset_type])) {
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:151:                $all_libraries[$extension][$library_name][$asset_type] = array_values($all_libraries[$extension][$library_name][$asset_type]);
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:158:    return $all_libraries;
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:162:   * Gets all libraries for core and all installed modules.
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:165:   *   An associative array of libraries keyed by extension, then by library
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:174:    $libraries['core'] = $this->libraryDiscovery->getLibrariesByExtension('core');
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:178:      $library_file = $module->getPath() . '/' . $module_name . '.libraries.yml';
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:180:        $libraries[$module_name] = $this->libraryDiscovery->getLibrariesByExtension($module_name);
core/tests/Drupal/KernelTests/Core/Theme/StableLibraryOverrideTest.php:183:    return $libraries;
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:46:   * Test that AJAX loaded libraries are not retained between requests.
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:57:    $session->evaluateScript("drupalSettings.ajaxPageState.libraries = drupalSettings.ajaxPageState.libraries + ',$fake_library';");
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:59:    $libraries = $session->evaluateScript('drupalSettings.ajaxPageState.libraries');
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:61:    $this->assertContains($fake_library, $libraries);
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:68:    $libraries = $session->evaluateScript('drupalSettings.ajaxPageState.libraries');
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:69:    $this->assertContains($fake_library, $libraries);
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:71:    // Reload the page, this should reset the loaded libraries and remove the
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:74:    $libraries = $session->evaluateScript('drupalSettings.ajaxPageState.libraries');
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:75:    $this->assertNotContains($fake_library, $libraries);
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:77:    // Click on the AJAX link again, and the libraries should still not contain
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:81:    $libraries = $session->evaluateScript('drupalSettings.ajaxPageState.libraries');
core/tests/Drupal/FunctionalJavascriptTests/Ajax/AjaxTest.php:82:    $this->assertNotContains($fake_library, $libraries);
core/tests/Drupal/FunctionalTests/Theme/BartikTest.php:30:   * @see bartik.libraries.yml
