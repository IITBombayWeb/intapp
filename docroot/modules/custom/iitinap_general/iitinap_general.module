<?php

/**
 * @file
 * Contains alter functions.
 */

// Use Drupal\user\Entity\User.
use Drupal\profile\Entity\Profile;
/* use Drupal\profile\Entity\ProfileType; */
use Drupal\node\Entity\Node;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Function iitinap_general_form_alter()
 */
function iitinap_general_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $user = \Drupal::currentUser();
  $roles = $user->getRoles();
  if ($form_id == 'node_programme_form') {
    if (in_array('office', $roles)) {
      $term = get_usr_term_id($user->id());
      if (isset($term) && !empty($term)) {
        if (isset($form['field_institute']['widget']['#options'])) {
          foreach ($form['field_institute']['widget']['#options'] as $tid => $term_val) {
            if ($tid != '_none' && $tid != $term) {
              unset($form['field_institute']['widget']['#options'][$tid]);
            }
          }
        }
      }
    }
  }
  if ($form_id == 'node_programme_edit_form') {
    $form['#validate'][] = 'form_validate_program';
  }
}

/**
 * Implements form_validation() for programme cck.
 */
function form_validate_program($form, &$form_state) {
  $nid = $form_state->getFormObject()->getEntity()->id();
  $user = \Drupal::currentUser();
  $roles = $user->getRoles();
  if (in_array('office', $roles)) {
    $term = get_usr_term_id($user->id());
    if (isset($term) && !empty($term)) {
      $node = Node::load($nid);
      $langcode = $node->language()->getId();
      $ins_term_id = $node->getTranslation($langcode)->get('field_institute')->getValue()[0]['target_id'];
      /*
      if ($term != $ins_term_id)  {
      $form_state->setError($form['field_institute'],
      "You don't have access to modify this content");
      }
       */
    }
  }
}

/**
 * Implements get_usr_term_id().
 */
function get_usr_term_id($usr_id) {
  $query = \Drupal::entityQuery('profile')
    ->condition('status', 1)
    ->condition('uid', $usr_id)
    ->condition('type', 'office');
  $nids = $query->execute();
  $nids = array_values($nids);
  if (isset($nids[0])) {
    $profile = Profile::load($nids[0]);
    $langcode = $profile->language()->getId();
    $term = $profile->getTranslation($langcode)->get('field_institute')->getValue()[0]['target_id'];
  }
  if (isset($term) && !empty($term)) {
    return $term;
  }
  /* return; */
}

/**
 * Implements iitinap_general_ENTITY_TYPE_view_alter().
 */
function iitinap_general_ENTITY_TYPE_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  /*if ($build['#view_mode'] == 'full' &&
  isset($build['an_additional_field'])) {
  // Change its weight.
  $build['an_additional_field']['#weight'] = -10;

  // Add a #post_render callback to act on the rendered HTML of the entity.
  $build['#post_render'][] = 'my_module_node_post_render';
  }*/
}

/**
 * Implements iitinap_general_js_alter().
 */
function iitinap_general_js_alter(&$javascript, AttachedAssetsInterface $assets) {
  // Swap out jQuery to use an updated version of the library.
  $javascript['core/assets/vendor/jquery/jquery.min.js']['data'] = drupal_get_path('module', 'iitinap_general') . '/js/jquery.min.js';
}
